// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/event.proto

#include "flyteidl/admin/event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace admin {
class EventErrorAlreadyInTerminalStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventErrorAlreadyInTerminalState>
      _instance;
} _EventErrorAlreadyInTerminalState_default_instance_;
class EventFailureReasonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventFailureReason>
      _instance;
  const ::flyteidl::admin::EventErrorAlreadyInTerminalState* already_in_terminal_state_;
} _EventFailureReason_default_instance_;
class WorkflowExecutionEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecutionEventRequest>
      _instance;
} _WorkflowExecutionEventRequest_default_instance_;
class WorkflowExecutionEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkflowExecutionEventResponse>
      _instance;
} _WorkflowExecutionEventResponse_default_instance_;
class NodeExecutionEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeExecutionEventRequest>
      _instance;
} _NodeExecutionEventRequest_default_instance_;
class NodeExecutionEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeExecutionEventResponse>
      _instance;
} _NodeExecutionEventResponse_default_instance_;
class TaskExecutionEventRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskExecutionEventRequest>
      _instance;
} _TaskExecutionEventRequest_default_instance_;
class TaskExecutionEventResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskExecutionEventResponse>
      _instance;
} _TaskExecutionEventResponse_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace protobuf_flyteidl_2fadmin_2fevent_2eproto {
void InitDefaultsEventErrorAlreadyInTerminalStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_EventErrorAlreadyInTerminalState_default_instance_;
    new (ptr) ::flyteidl::admin::EventErrorAlreadyInTerminalState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::EventErrorAlreadyInTerminalState::InitAsDefaultInstance();
}

void InitDefaultsEventErrorAlreadyInTerminalState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventErrorAlreadyInTerminalStateImpl);
}

void InitDefaultsEventFailureReasonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsEventErrorAlreadyInTerminalState();
  {
    void* ptr = &::flyteidl::admin::_EventFailureReason_default_instance_;
    new (ptr) ::flyteidl::admin::EventFailureReason();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::EventFailureReason::InitAsDefaultInstance();
}

void InitDefaultsEventFailureReason() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventFailureReasonImpl);
}

void InitDefaultsWorkflowExecutionEventRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fevent_2fevent_2eproto::InitDefaultsWorkflowExecutionEvent();
  {
    void* ptr = &::flyteidl::admin::_WorkflowExecutionEventRequest_default_instance_;
    new (ptr) ::flyteidl::admin::WorkflowExecutionEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::WorkflowExecutionEventRequest::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecutionEventRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionEventRequestImpl);
}

void InitDefaultsWorkflowExecutionEventResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_WorkflowExecutionEventResponse_default_instance_;
    new (ptr) ::flyteidl::admin::WorkflowExecutionEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::WorkflowExecutionEventResponse::InitAsDefaultInstance();
}

void InitDefaultsWorkflowExecutionEventResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorkflowExecutionEventResponseImpl);
}

void InitDefaultsNodeExecutionEventRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fevent_2fevent_2eproto::InitDefaultsNodeExecutionEvent();
  {
    void* ptr = &::flyteidl::admin::_NodeExecutionEventRequest_default_instance_;
    new (ptr) ::flyteidl::admin::NodeExecutionEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::NodeExecutionEventRequest::InitAsDefaultInstance();
}

void InitDefaultsNodeExecutionEventRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeExecutionEventRequestImpl);
}

void InitDefaultsNodeExecutionEventResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_NodeExecutionEventResponse_default_instance_;
    new (ptr) ::flyteidl::admin::NodeExecutionEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::NodeExecutionEventResponse::InitAsDefaultInstance();
}

void InitDefaultsNodeExecutionEventResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNodeExecutionEventResponseImpl);
}

void InitDefaultsTaskExecutionEventRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fevent_2fevent_2eproto::InitDefaultsTaskExecutionEvent();
  {
    void* ptr = &::flyteidl::admin::_TaskExecutionEventRequest_default_instance_;
    new (ptr) ::flyteidl::admin::TaskExecutionEventRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::TaskExecutionEventRequest::InitAsDefaultInstance();
}

void InitDefaultsTaskExecutionEventRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskExecutionEventRequestImpl);
}

void InitDefaultsTaskExecutionEventResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_TaskExecutionEventResponse_default_instance_;
    new (ptr) ::flyteidl::admin::TaskExecutionEventResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::TaskExecutionEventResponse::InitAsDefaultInstance();
}

void InitDefaultsTaskExecutionEventResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskExecutionEventResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EventErrorAlreadyInTerminalState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EventErrorAlreadyInTerminalState, current_phase_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EventFailureReason, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EventFailureReason, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::admin::EventFailureReasonDefaultTypeInternal, already_in_terminal_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EventFailureReason, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionEventRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionEventRequest, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::WorkflowExecutionEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NodeExecutionEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NodeExecutionEventRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NodeExecutionEventRequest, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::NodeExecutionEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::TaskExecutionEventRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::TaskExecutionEventRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::TaskExecutionEventRequest, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::TaskExecutionEventResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::EventErrorAlreadyInTerminalState)},
  { 6, -1, sizeof(::flyteidl::admin::EventFailureReason)},
  { 13, -1, sizeof(::flyteidl::admin::WorkflowExecutionEventRequest)},
  { 20, -1, sizeof(::flyteidl::admin::WorkflowExecutionEventResponse)},
  { 25, -1, sizeof(::flyteidl::admin::NodeExecutionEventRequest)},
  { 32, -1, sizeof(::flyteidl::admin::NodeExecutionEventResponse)},
  { 37, -1, sizeof(::flyteidl::admin::TaskExecutionEventRequest)},
  { 44, -1, sizeof(::flyteidl::admin::TaskExecutionEventResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_EventErrorAlreadyInTerminalState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_EventFailureReason_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_WorkflowExecutionEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_WorkflowExecutionEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_NodeExecutionEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_NodeExecutionEventResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_TaskExecutionEventRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_TaskExecutionEventResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/admin/event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032flyteidl/admin/event.proto\022\016flyteidl.a"
      "dmin\032\032flyteidl/event/event.proto\"9\n Even"
      "tErrorAlreadyInTerminalState\022\025\n\rcurrent_"
      "phase\030\001 \001(\t\"u\n\022EventFailureReason\022U\n\031alr"
      "eady_in_terminal_state\030\001 \001(\01320.flyteidl."
      "admin.EventErrorAlreadyInTerminalStateH\000"
      "B\010\n\006reason\"j\n\035WorkflowExecutionEventRequ"
      "est\022\022\n\nrequest_id\030\001 \001(\t\0225\n\005event\030\002 \001(\0132&"
      ".flyteidl.event.WorkflowExecutionEvent\" "
      "\n\036WorkflowExecutionEventResponse\"b\n\031Node"
      "ExecutionEventRequest\022\022\n\nrequest_id\030\001 \001("
      "\t\0221\n\005event\030\002 \001(\0132\".flyteidl.event.NodeEx"
      "ecutionEvent\"\034\n\032NodeExecutionEventRespon"
      "se\"b\n\031TaskExecutionEventRequest\022\022\n\nreque"
      "st_id\030\001 \001(\t\0221\n\005event\030\002 \001(\0132\".flyteidl.ev"
      "ent.TaskExecutionEvent\"\034\n\032TaskExecutionE"
      "ventResponseB3Z1github.com/lyft/flyteidl"
      "/gen/pb-go/flyteidl/adminb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 713);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/admin/event.proto", &protobuf_RegisterTypes);
  ::protobuf_flyteidl_2fevent_2fevent_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fadmin_2fevent_2eproto
namespace flyteidl {
namespace admin {

// ===================================================================

void EventErrorAlreadyInTerminalState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventErrorAlreadyInTerminalState::kCurrentPhaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventErrorAlreadyInTerminalState::EventErrorAlreadyInTerminalState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsEventErrorAlreadyInTerminalState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.EventErrorAlreadyInTerminalState)
}
EventErrorAlreadyInTerminalState::EventErrorAlreadyInTerminalState(const EventErrorAlreadyInTerminalState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_phase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_phase().size() > 0) {
    current_phase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_phase_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.EventErrorAlreadyInTerminalState)
}

void EventErrorAlreadyInTerminalState::SharedCtor() {
  current_phase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EventErrorAlreadyInTerminalState::~EventErrorAlreadyInTerminalState() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.EventErrorAlreadyInTerminalState)
  SharedDtor();
}

void EventErrorAlreadyInTerminalState::SharedDtor() {
  current_phase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventErrorAlreadyInTerminalState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventErrorAlreadyInTerminalState::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventErrorAlreadyInTerminalState& EventErrorAlreadyInTerminalState::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsEventErrorAlreadyInTerminalState();
  return *internal_default_instance();
}

EventErrorAlreadyInTerminalState* EventErrorAlreadyInTerminalState::New(::google::protobuf::Arena* arena) const {
  EventErrorAlreadyInTerminalState* n = new EventErrorAlreadyInTerminalState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventErrorAlreadyInTerminalState::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EventErrorAlreadyInTerminalState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string current_phase = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_phase()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_phase().data(), static_cast<int>(this->current_phase().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.EventErrorAlreadyInTerminalState.current_phase"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.EventErrorAlreadyInTerminalState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.EventErrorAlreadyInTerminalState)
  return false;
#undef DO_
}

void EventErrorAlreadyInTerminalState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string current_phase = 1;
  if (this->current_phase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_phase().data(), static_cast<int>(this->current_phase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EventErrorAlreadyInTerminalState.current_phase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->current_phase(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.EventErrorAlreadyInTerminalState)
}

::google::protobuf::uint8* EventErrorAlreadyInTerminalState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string current_phase = 1;
  if (this->current_phase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_phase().data(), static_cast<int>(this->current_phase().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EventErrorAlreadyInTerminalState.current_phase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->current_phase(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.EventErrorAlreadyInTerminalState)
  return target;
}

size_t EventErrorAlreadyInTerminalState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string current_phase = 1;
  if (this->current_phase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_phase());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventErrorAlreadyInTerminalState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  GOOGLE_DCHECK_NE(&from, this);
  const EventErrorAlreadyInTerminalState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventErrorAlreadyInTerminalState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.EventErrorAlreadyInTerminalState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.EventErrorAlreadyInTerminalState)
    MergeFrom(*source);
  }
}

void EventErrorAlreadyInTerminalState::MergeFrom(const EventErrorAlreadyInTerminalState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_phase().size() > 0) {

    current_phase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_phase_);
  }
}

void EventErrorAlreadyInTerminalState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventErrorAlreadyInTerminalState::CopyFrom(const EventErrorAlreadyInTerminalState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.EventErrorAlreadyInTerminalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventErrorAlreadyInTerminalState::IsInitialized() const {
  return true;
}

void EventErrorAlreadyInTerminalState::Swap(EventErrorAlreadyInTerminalState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventErrorAlreadyInTerminalState::InternalSwap(EventErrorAlreadyInTerminalState* other) {
  using std::swap;
  current_phase_.Swap(&other->current_phase_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventErrorAlreadyInTerminalState::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventFailureReason::InitAsDefaultInstance() {
  ::flyteidl::admin::_EventFailureReason_default_instance_.already_in_terminal_state_ = const_cast< ::flyteidl::admin::EventErrorAlreadyInTerminalState*>(
      ::flyteidl::admin::EventErrorAlreadyInTerminalState::internal_default_instance());
}
void EventFailureReason::set_allocated_already_in_terminal_state(::flyteidl::admin::EventErrorAlreadyInTerminalState* already_in_terminal_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reason();
  if (already_in_terminal_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      already_in_terminal_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, already_in_terminal_state, submessage_arena);
    }
    set_has_already_in_terminal_state();
    reason_.already_in_terminal_state_ = already_in_terminal_state;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.admin.EventFailureReason.already_in_terminal_state)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventFailureReason::kAlreadyInTerminalStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventFailureReason::EventFailureReason()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsEventFailureReason();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.EventFailureReason)
}
EventFailureReason::EventFailureReason(const EventFailureReason& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_reason();
  switch (from.reason_case()) {
    case kAlreadyInTerminalState: {
      mutable_already_in_terminal_state()->::flyteidl::admin::EventErrorAlreadyInTerminalState::MergeFrom(from.already_in_terminal_state());
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.EventFailureReason)
}

void EventFailureReason::SharedCtor() {
  clear_has_reason();
  _cached_size_ = 0;
}

EventFailureReason::~EventFailureReason() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.EventFailureReason)
  SharedDtor();
}

void EventFailureReason::SharedDtor() {
  if (has_reason()) {
    clear_reason();
  }
}

void EventFailureReason::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventFailureReason::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventFailureReason& EventFailureReason::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsEventFailureReason();
  return *internal_default_instance();
}

EventFailureReason* EventFailureReason::New(::google::protobuf::Arena* arena) const {
  EventFailureReason* n = new EventFailureReason;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EventFailureReason::clear_reason() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.admin.EventFailureReason)
  switch (reason_case()) {
    case kAlreadyInTerminalState: {
      delete reason_.already_in_terminal_state_;
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REASON_NOT_SET;
}


void EventFailureReason::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.EventFailureReason)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_reason();
  _internal_metadata_.Clear();
}

bool EventFailureReason::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.EventFailureReason)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.admin.EventErrorAlreadyInTerminalState already_in_terminal_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_already_in_terminal_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.EventFailureReason)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.EventFailureReason)
  return false;
#undef DO_
}

void EventFailureReason::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.EventFailureReason)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.EventErrorAlreadyInTerminalState already_in_terminal_state = 1;
  if (has_already_in_terminal_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *reason_.already_in_terminal_state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.EventFailureReason)
}

::google::protobuf::uint8* EventFailureReason::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.EventFailureReason)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.admin.EventErrorAlreadyInTerminalState already_in_terminal_state = 1;
  if (has_already_in_terminal_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *reason_.already_in_terminal_state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.EventFailureReason)
  return target;
}

size_t EventFailureReason::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.EventFailureReason)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (reason_case()) {
    // .flyteidl.admin.EventErrorAlreadyInTerminalState already_in_terminal_state = 1;
    case kAlreadyInTerminalState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reason_.already_in_terminal_state_);
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EventFailureReason::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.EventFailureReason)
  GOOGLE_DCHECK_NE(&from, this);
  const EventFailureReason* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventFailureReason>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.EventFailureReason)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.EventFailureReason)
    MergeFrom(*source);
  }
}

void EventFailureReason::MergeFrom(const EventFailureReason& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.EventFailureReason)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.reason_case()) {
    case kAlreadyInTerminalState: {
      mutable_already_in_terminal_state()->::flyteidl::admin::EventErrorAlreadyInTerminalState::MergeFrom(from.already_in_terminal_state());
      break;
    }
    case REASON_NOT_SET: {
      break;
    }
  }
}

void EventFailureReason::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.EventFailureReason)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventFailureReason::CopyFrom(const EventFailureReason& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.EventFailureReason)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventFailureReason::IsInitialized() const {
  return true;
}

void EventFailureReason::Swap(EventFailureReason* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventFailureReason::InternalSwap(EventFailureReason* other) {
  using std::swap;
  swap(reason_, other->reason_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventFailureReason::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowExecutionEventRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_WorkflowExecutionEventRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::flyteidl::event::WorkflowExecutionEvent*>(
      ::flyteidl::event::WorkflowExecutionEvent::internal_default_instance());
}
void WorkflowExecutionEventRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkflowExecutionEventRequest::kRequestIdFieldNumber;
const int WorkflowExecutionEventRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecutionEventRequest::WorkflowExecutionEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsWorkflowExecutionEventRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.WorkflowExecutionEventRequest)
}
WorkflowExecutionEventRequest::WorkflowExecutionEventRequest(const WorkflowExecutionEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    event_ = new ::flyteidl::event::WorkflowExecutionEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.WorkflowExecutionEventRequest)
}

void WorkflowExecutionEventRequest::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

WorkflowExecutionEventRequest::~WorkflowExecutionEventRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.WorkflowExecutionEventRequest)
  SharedDtor();
}

void WorkflowExecutionEventRequest::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void WorkflowExecutionEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecutionEventRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecutionEventRequest& WorkflowExecutionEventRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsWorkflowExecutionEventRequest();
  return *internal_default_instance();
}

WorkflowExecutionEventRequest* WorkflowExecutionEventRequest::New(::google::protobuf::Arena* arena) const {
  WorkflowExecutionEventRequest* n = new WorkflowExecutionEventRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecutionEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.WorkflowExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool WorkflowExecutionEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.WorkflowExecutionEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.WorkflowExecutionEventRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.event.WorkflowExecutionEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.WorkflowExecutionEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.WorkflowExecutionEventRequest)
  return false;
#undef DO_
}

void WorkflowExecutionEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.WorkflowExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.WorkflowExecutionEventRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // .flyteidl.event.WorkflowExecutionEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.WorkflowExecutionEventRequest)
}

::google::protobuf::uint8* WorkflowExecutionEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.WorkflowExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.WorkflowExecutionEventRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // .flyteidl.event.WorkflowExecutionEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.WorkflowExecutionEventRequest)
  return target;
}

size_t WorkflowExecutionEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.WorkflowExecutionEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .flyteidl.event.WorkflowExecutionEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecutionEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.WorkflowExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecutionEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecutionEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.WorkflowExecutionEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.WorkflowExecutionEventRequest)
    MergeFrom(*source);
  }
}

void WorkflowExecutionEventRequest::MergeFrom(const WorkflowExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.WorkflowExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    mutable_event()->::flyteidl::event::WorkflowExecutionEvent::MergeFrom(from.event());
  }
}

void WorkflowExecutionEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.WorkflowExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecutionEventRequest::CopyFrom(const WorkflowExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.WorkflowExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecutionEventRequest::IsInitialized() const {
  return true;
}

void WorkflowExecutionEventRequest::Swap(WorkflowExecutionEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecutionEventRequest::InternalSwap(WorkflowExecutionEventRequest* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecutionEventRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkflowExecutionEventResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkflowExecutionEventResponse::WorkflowExecutionEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsWorkflowExecutionEventResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.WorkflowExecutionEventResponse)
}
WorkflowExecutionEventResponse::WorkflowExecutionEventResponse(const WorkflowExecutionEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.WorkflowExecutionEventResponse)
}

void WorkflowExecutionEventResponse::SharedCtor() {
  _cached_size_ = 0;
}

WorkflowExecutionEventResponse::~WorkflowExecutionEventResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.WorkflowExecutionEventResponse)
  SharedDtor();
}

void WorkflowExecutionEventResponse::SharedDtor() {
}

void WorkflowExecutionEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkflowExecutionEventResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkflowExecutionEventResponse& WorkflowExecutionEventResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsWorkflowExecutionEventResponse();
  return *internal_default_instance();
}

WorkflowExecutionEventResponse* WorkflowExecutionEventResponse::New(::google::protobuf::Arena* arena) const {
  WorkflowExecutionEventResponse* n = new WorkflowExecutionEventResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkflowExecutionEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.WorkflowExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WorkflowExecutionEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.WorkflowExecutionEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.WorkflowExecutionEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.WorkflowExecutionEventResponse)
  return false;
#undef DO_
}

void WorkflowExecutionEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.WorkflowExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.WorkflowExecutionEventResponse)
}

::google::protobuf::uint8* WorkflowExecutionEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.WorkflowExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.WorkflowExecutionEventResponse)
  return target;
}

size_t WorkflowExecutionEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.WorkflowExecutionEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkflowExecutionEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.WorkflowExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkflowExecutionEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkflowExecutionEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.WorkflowExecutionEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.WorkflowExecutionEventResponse)
    MergeFrom(*source);
  }
}

void WorkflowExecutionEventResponse::MergeFrom(const WorkflowExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.WorkflowExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorkflowExecutionEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.WorkflowExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkflowExecutionEventResponse::CopyFrom(const WorkflowExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.WorkflowExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkflowExecutionEventResponse::IsInitialized() const {
  return true;
}

void WorkflowExecutionEventResponse::Swap(WorkflowExecutionEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkflowExecutionEventResponse::InternalSwap(WorkflowExecutionEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkflowExecutionEventResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeExecutionEventRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_NodeExecutionEventRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::flyteidl::event::NodeExecutionEvent*>(
      ::flyteidl::event::NodeExecutionEvent::internal_default_instance());
}
void NodeExecutionEventRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeExecutionEventRequest::kRequestIdFieldNumber;
const int NodeExecutionEventRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeExecutionEventRequest::NodeExecutionEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsNodeExecutionEventRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.NodeExecutionEventRequest)
}
NodeExecutionEventRequest::NodeExecutionEventRequest(const NodeExecutionEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    event_ = new ::flyteidl::event::NodeExecutionEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NodeExecutionEventRequest)
}

void NodeExecutionEventRequest::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

NodeExecutionEventRequest::~NodeExecutionEventRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NodeExecutionEventRequest)
  SharedDtor();
}

void NodeExecutionEventRequest::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void NodeExecutionEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeExecutionEventRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeExecutionEventRequest& NodeExecutionEventRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsNodeExecutionEventRequest();
  return *internal_default_instance();
}

NodeExecutionEventRequest* NodeExecutionEventRequest::New(::google::protobuf::Arena* arena) const {
  NodeExecutionEventRequest* n = new NodeExecutionEventRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeExecutionEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.NodeExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool NodeExecutionEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.NodeExecutionEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.NodeExecutionEventRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.event.NodeExecutionEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.NodeExecutionEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.NodeExecutionEventRequest)
  return false;
#undef DO_
}

void NodeExecutionEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.NodeExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.NodeExecutionEventRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // .flyteidl.event.NodeExecutionEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.NodeExecutionEventRequest)
}

::google::protobuf::uint8* NodeExecutionEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.NodeExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.NodeExecutionEventRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // .flyteidl.event.NodeExecutionEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.NodeExecutionEventRequest)
  return target;
}

size_t NodeExecutionEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.NodeExecutionEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .flyteidl.event.NodeExecutionEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeExecutionEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.NodeExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeExecutionEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeExecutionEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.NodeExecutionEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.NodeExecutionEventRequest)
    MergeFrom(*source);
  }
}

void NodeExecutionEventRequest::MergeFrom(const NodeExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.NodeExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    mutable_event()->::flyteidl::event::NodeExecutionEvent::MergeFrom(from.event());
  }
}

void NodeExecutionEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.NodeExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeExecutionEventRequest::CopyFrom(const NodeExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.NodeExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeExecutionEventRequest::IsInitialized() const {
  return true;
}

void NodeExecutionEventRequest::Swap(NodeExecutionEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeExecutionEventRequest::InternalSwap(NodeExecutionEventRequest* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeExecutionEventRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeExecutionEventResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeExecutionEventResponse::NodeExecutionEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsNodeExecutionEventResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.NodeExecutionEventResponse)
}
NodeExecutionEventResponse::NodeExecutionEventResponse(const NodeExecutionEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.NodeExecutionEventResponse)
}

void NodeExecutionEventResponse::SharedCtor() {
  _cached_size_ = 0;
}

NodeExecutionEventResponse::~NodeExecutionEventResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.NodeExecutionEventResponse)
  SharedDtor();
}

void NodeExecutionEventResponse::SharedDtor() {
}

void NodeExecutionEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeExecutionEventResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeExecutionEventResponse& NodeExecutionEventResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsNodeExecutionEventResponse();
  return *internal_default_instance();
}

NodeExecutionEventResponse* NodeExecutionEventResponse::New(::google::protobuf::Arena* arena) const {
  NodeExecutionEventResponse* n = new NodeExecutionEventResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeExecutionEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.NodeExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool NodeExecutionEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.NodeExecutionEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.NodeExecutionEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.NodeExecutionEventResponse)
  return false;
#undef DO_
}

void NodeExecutionEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.NodeExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.NodeExecutionEventResponse)
}

::google::protobuf::uint8* NodeExecutionEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.NodeExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.NodeExecutionEventResponse)
  return target;
}

size_t NodeExecutionEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.NodeExecutionEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeExecutionEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.NodeExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeExecutionEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeExecutionEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.NodeExecutionEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.NodeExecutionEventResponse)
    MergeFrom(*source);
  }
}

void NodeExecutionEventResponse::MergeFrom(const NodeExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.NodeExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NodeExecutionEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.NodeExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeExecutionEventResponse::CopyFrom(const NodeExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.NodeExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeExecutionEventResponse::IsInitialized() const {
  return true;
}

void NodeExecutionEventResponse::Swap(NodeExecutionEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeExecutionEventResponse::InternalSwap(NodeExecutionEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeExecutionEventResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskExecutionEventRequest::InitAsDefaultInstance() {
  ::flyteidl::admin::_TaskExecutionEventRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::flyteidl::event::TaskExecutionEvent*>(
      ::flyteidl::event::TaskExecutionEvent::internal_default_instance());
}
void TaskExecutionEventRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskExecutionEventRequest::kRequestIdFieldNumber;
const int TaskExecutionEventRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskExecutionEventRequest::TaskExecutionEventRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsTaskExecutionEventRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.TaskExecutionEventRequest)
}
TaskExecutionEventRequest::TaskExecutionEventRequest(const TaskExecutionEventRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    event_ = new ::flyteidl::event::TaskExecutionEvent(*from.event_);
  } else {
    event_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.TaskExecutionEventRequest)
}

void TaskExecutionEventRequest::SharedCtor() {
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_ = NULL;
  _cached_size_ = 0;
}

TaskExecutionEventRequest::~TaskExecutionEventRequest() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.TaskExecutionEventRequest)
  SharedDtor();
}

void TaskExecutionEventRequest::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete event_;
}

void TaskExecutionEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskExecutionEventRequest::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskExecutionEventRequest& TaskExecutionEventRequest::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsTaskExecutionEventRequest();
  return *internal_default_instance();
}

TaskExecutionEventRequest* TaskExecutionEventRequest::New(::google::protobuf::Arena* arena) const {
  TaskExecutionEventRequest* n = new TaskExecutionEventRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskExecutionEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.TaskExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  _internal_metadata_.Clear();
}

bool TaskExecutionEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.TaskExecutionEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.TaskExecutionEventRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.event.TaskExecutionEvent event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.TaskExecutionEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.TaskExecutionEventRequest)
  return false;
#undef DO_
}

void TaskExecutionEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.TaskExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskExecutionEventRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // .flyteidl.event.TaskExecutionEvent event = 2;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->event_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.TaskExecutionEventRequest)
}

::google::protobuf::uint8* TaskExecutionEventRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.TaskExecutionEventRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.TaskExecutionEventRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // .flyteidl.event.TaskExecutionEvent event = 2;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->event_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.TaskExecutionEventRequest)
  return target;
}

size_t TaskExecutionEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.TaskExecutionEventRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .flyteidl.event.TaskExecutionEvent event = 2;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->event_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskExecutionEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.TaskExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskExecutionEventRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskExecutionEventRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.TaskExecutionEventRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.TaskExecutionEventRequest)
    MergeFrom(*source);
  }
}

void TaskExecutionEventRequest::MergeFrom(const TaskExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.TaskExecutionEventRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.has_event()) {
    mutable_event()->::flyteidl::event::TaskExecutionEvent::MergeFrom(from.event());
  }
}

void TaskExecutionEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.TaskExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskExecutionEventRequest::CopyFrom(const TaskExecutionEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.TaskExecutionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskExecutionEventRequest::IsInitialized() const {
  return true;
}

void TaskExecutionEventRequest::Swap(TaskExecutionEventRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskExecutionEventRequest::InternalSwap(TaskExecutionEventRequest* other) {
  using std::swap;
  request_id_.Swap(&other->request_id_);
  swap(event_, other->event_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskExecutionEventRequest::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskExecutionEventResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskExecutionEventResponse::TaskExecutionEventResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsTaskExecutionEventResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.TaskExecutionEventResponse)
}
TaskExecutionEventResponse::TaskExecutionEventResponse(const TaskExecutionEventResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.TaskExecutionEventResponse)
}

void TaskExecutionEventResponse::SharedCtor() {
  _cached_size_ = 0;
}

TaskExecutionEventResponse::~TaskExecutionEventResponse() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.TaskExecutionEventResponse)
  SharedDtor();
}

void TaskExecutionEventResponse::SharedDtor() {
}

void TaskExecutionEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskExecutionEventResponse::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskExecutionEventResponse& TaskExecutionEventResponse::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fevent_2eproto::InitDefaultsTaskExecutionEventResponse();
  return *internal_default_instance();
}

TaskExecutionEventResponse* TaskExecutionEventResponse::New(::google::protobuf::Arena* arena) const {
  TaskExecutionEventResponse* n = new TaskExecutionEventResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskExecutionEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.TaskExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TaskExecutionEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.TaskExecutionEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.TaskExecutionEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.TaskExecutionEventResponse)
  return false;
#undef DO_
}

void TaskExecutionEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.TaskExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.TaskExecutionEventResponse)
}

::google::protobuf::uint8* TaskExecutionEventResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.TaskExecutionEventResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.TaskExecutionEventResponse)
  return target;
}

size_t TaskExecutionEventResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.TaskExecutionEventResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskExecutionEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.TaskExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskExecutionEventResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskExecutionEventResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.TaskExecutionEventResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.TaskExecutionEventResponse)
    MergeFrom(*source);
  }
}

void TaskExecutionEventResponse::MergeFrom(const TaskExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.TaskExecutionEventResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TaskExecutionEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.TaskExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskExecutionEventResponse::CopyFrom(const TaskExecutionEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.TaskExecutionEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskExecutionEventResponse::IsInitialized() const {
  return true;
}

void TaskExecutionEventResponse::Swap(TaskExecutionEventResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskExecutionEventResponse::InternalSwap(TaskExecutionEventResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskExecutionEventResponse::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fevent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fevent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
