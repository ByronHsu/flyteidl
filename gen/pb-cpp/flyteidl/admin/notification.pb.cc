// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/admin/notification.proto

#include "flyteidl/admin/notification.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace admin {
class EmailMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailMessage>
      _instance;
} _EmailMessage_default_instance_;
}  // namespace admin
}  // namespace flyteidl
namespace protobuf_flyteidl_2fadmin_2fnotification_2eproto {
void InitDefaultsEmailMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::admin::_EmailMessage_default_instance_;
    new (ptr) ::flyteidl::admin::EmailMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::admin::EmailMessage::InitAsDefaultInstance();
}

void InitDefaultsEmailMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmailMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EmailMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EmailMessage, recipients_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EmailMessage, sender_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EmailMessage, subject_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::admin::EmailMessage, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::admin::EmailMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::admin::_EmailMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/admin/notification.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!flyteidl/admin/notification.proto\022\016fly"
      "teidl.admin\"b\n\014EmailMessage\022\030\n\020recipient"
      "s_email\030\001 \003(\t\022\024\n\014sender_email\030\002 \001(\t\022\024\n\014s"
      "ubject_line\030\003 \001(\t\022\014\n\004body\030\004 \001(\tB3Z1githu"
      "b.com/lyft/flyteidl/gen/pb-go/flyteidl/a"
      "dminb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 212);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/admin/notification.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fadmin_2fnotification_2eproto
namespace flyteidl {
namespace admin {

// ===================================================================

void EmailMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailMessage::kRecipientsEmailFieldNumber;
const int EmailMessage::kSenderEmailFieldNumber;
const int EmailMessage::kSubjectLineFieldNumber;
const int EmailMessage::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailMessage::EmailMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fadmin_2fnotification_2eproto::InitDefaultsEmailMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.admin.EmailMessage)
}
EmailMessage::EmailMessage(const EmailMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recipients_email_(from.recipients_email_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender_email().size() > 0) {
    sender_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_email_);
  }
  subject_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject_line().size() > 0) {
    subject_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_line_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.admin.EmailMessage)
}

void EmailMessage::SharedCtor() {
  sender_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EmailMessage::~EmailMessage() {
  // @@protoc_insertion_point(destructor:flyteidl.admin.EmailMessage)
  SharedDtor();
}

void EmailMessage::SharedDtor() {
  sender_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmailMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmailMessage::descriptor() {
  ::protobuf_flyteidl_2fadmin_2fnotification_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fnotification_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailMessage& EmailMessage::default_instance() {
  ::protobuf_flyteidl_2fadmin_2fnotification_2eproto::InitDefaultsEmailMessage();
  return *internal_default_instance();
}

EmailMessage* EmailMessage::New(::google::protobuf::Arena* arena) const {
  EmailMessage* n = new EmailMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EmailMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.admin.EmailMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recipients_email_.Clear();
  sender_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_line_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EmailMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.admin.EmailMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string recipients_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_recipients_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->recipients_email(this->recipients_email_size() - 1).data(),
            static_cast<int>(this->recipients_email(this->recipients_email_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.EmailMessage.recipients_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender_email().data(), static_cast<int>(this->sender_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.EmailMessage.sender_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject_line().data(), static_cast<int>(this->subject_line().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.EmailMessage.subject_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.admin.EmailMessage.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.admin.EmailMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.admin.EmailMessage)
  return false;
#undef DO_
}

void EmailMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.admin.EmailMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string recipients_email = 1;
  for (int i = 0, n = this->recipients_email_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recipients_email(i).data(), static_cast<int>(this->recipients_email(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.recipients_email");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->recipients_email(i), output);
  }

  // string sender_email = 2;
  if (this->sender_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender_email().data(), static_cast<int>(this->sender_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.sender_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender_email(), output);
  }

  // string subject_line = 3;
  if (this->subject_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_line().data(), static_cast<int>(this->subject_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.subject_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subject_line(), output);
  }

  // string body = 4;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.admin.EmailMessage)
}

::google::protobuf::uint8* EmailMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.admin.EmailMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string recipients_email = 1;
  for (int i = 0, n = this->recipients_email_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->recipients_email(i).data(), static_cast<int>(this->recipients_email(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.recipients_email");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->recipients_email(i), target);
  }

  // string sender_email = 2;
  if (this->sender_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender_email().data(), static_cast<int>(this->sender_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.sender_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender_email(), target);
  }

  // string subject_line = 3;
  if (this->subject_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_line().data(), static_cast<int>(this->subject_line().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.subject_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subject_line(), target);
  }

  // string body = 4;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.admin.EmailMessage.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.admin.EmailMessage)
  return target;
}

size_t EmailMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.admin.EmailMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string recipients_email = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->recipients_email_size());
  for (int i = 0, n = this->recipients_email_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->recipients_email(i));
  }

  // string sender_email = 2;
  if (this->sender_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender_email());
  }

  // string subject_line = 3;
  if (this->subject_line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject_line());
  }

  // string body = 4;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmailMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.admin.EmailMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.admin.EmailMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.admin.EmailMessage)
    MergeFrom(*source);
  }
}

void EmailMessage::MergeFrom(const EmailMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.admin.EmailMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recipients_email_.MergeFrom(from.recipients_email_);
  if (from.sender_email().size() > 0) {

    sender_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_email_);
  }
  if (from.subject_line().size() > 0) {

    subject_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_line_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
}

void EmailMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.admin.EmailMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailMessage::CopyFrom(const EmailMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.admin.EmailMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailMessage::IsInitialized() const {
  return true;
}

void EmailMessage::Swap(EmailMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailMessage::InternalSwap(EmailMessage* other) {
  using std::swap;
  recipients_email_.InternalSwap(&other->recipients_email_);
  sender_email_.Swap(&other->sender_email_);
  subject_line_.Swap(&other->subject_line_);
  body_.Swap(&other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EmailMessage::GetMetadata() const {
  protobuf_flyteidl_2fadmin_2fnotification_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fadmin_2fnotification_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
