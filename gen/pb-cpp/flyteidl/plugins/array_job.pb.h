// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/plugins/array_job.proto

#ifndef PROTOBUF_flyteidl_2fplugins_2farray_5fjob_2eproto__INCLUDED
#define PROTOBUF_flyteidl_2fplugins_2farray_5fjob_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_flyteidl_2fplugins_2farray_5fjob_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsArrayJobImpl();
void InitDefaultsArrayJob();
inline void InitDefaults() {
  InitDefaultsArrayJob();
}
}  // namespace protobuf_flyteidl_2fplugins_2farray_5fjob_2eproto
namespace flyteidl {
namespace plugins {
class ArrayJob;
class ArrayJobDefaultTypeInternal;
extern ArrayJobDefaultTypeInternal _ArrayJob_default_instance_;
}  // namespace plugins
}  // namespace flyteidl
namespace flyteidl {
namespace plugins {

// ===================================================================

class ArrayJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:flyteidl.plugins.ArrayJob) */ {
 public:
  ArrayJob();
  virtual ~ArrayJob();

  ArrayJob(const ArrayJob& from);

  inline ArrayJob& operator=(const ArrayJob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArrayJob(ArrayJob&& from) noexcept
    : ArrayJob() {
    *this = ::std::move(from);
  }

  inline ArrayJob& operator=(ArrayJob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArrayJob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayJob* internal_default_instance() {
    return reinterpret_cast<const ArrayJob*>(
               &_ArrayJob_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ArrayJob* other);
  friend void swap(ArrayJob& a, ArrayJob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArrayJob* New() const PROTOBUF_FINAL { return New(NULL); }

  ArrayJob* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArrayJob& from);
  void MergeFrom(const ArrayJob& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArrayJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 parallelism = 1;
  void clear_parallelism();
  static const int kParallelismFieldNumber = 1;
  ::google::protobuf::int64 parallelism() const;
  void set_parallelism(::google::protobuf::int64 value);

  // int64 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // int64 min_successes = 3;
  void clear_min_successes();
  static const int kMinSuccessesFieldNumber = 3;
  ::google::protobuf::int64 min_successes() const;
  void set_min_successes(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:flyteidl.plugins.ArrayJob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 parallelism_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 min_successes_;
  mutable int _cached_size_;
  friend struct ::protobuf_flyteidl_2fplugins_2farray_5fjob_2eproto::TableStruct;
  friend void ::protobuf_flyteidl_2fplugins_2farray_5fjob_2eproto::InitDefaultsArrayJobImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArrayJob

// int64 parallelism = 1;
inline void ArrayJob::clear_parallelism() {
  parallelism_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ArrayJob::parallelism() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.ArrayJob.parallelism)
  return parallelism_;
}
inline void ArrayJob::set_parallelism(::google::protobuf::int64 value) {
  
  parallelism_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.ArrayJob.parallelism)
}

// int64 size = 2;
inline void ArrayJob::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ArrayJob::size() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.ArrayJob.size)
  return size_;
}
inline void ArrayJob::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.ArrayJob.size)
}

// int64 min_successes = 3;
inline void ArrayJob::clear_min_successes() {
  min_successes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ArrayJob::min_successes() const {
  // @@protoc_insertion_point(field_get:flyteidl.plugins.ArrayJob.min_successes)
  return min_successes_;
}
inline void ArrayJob::set_min_successes(::google::protobuf::int64 value) {
  
  min_successes_ = value;
  // @@protoc_insertion_point(field_set:flyteidl.plugins.ArrayJob.min_successes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace plugins
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_flyteidl_2fplugins_2farray_5fjob_2eproto__INCLUDED
