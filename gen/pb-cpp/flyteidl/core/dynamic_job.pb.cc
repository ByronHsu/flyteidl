// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/dynamic_job.proto

#include "flyteidl/core/dynamic_job.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class DynamicJobSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicJobSpec>
      _instance;
} _DynamicJobSpec_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto {
void InitDefaultsDynamicJobSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fworkflow_2eproto::InitDefaultsBranchNode();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinding();
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskTemplate();
  protobuf_flyteidl_2fcore_2fworkflow_2eproto::InitDefaultsWorkflowTemplate();
  {
    void* ptr = &::flyteidl::core::_DynamicJobSpec_default_instance_;
    new (ptr) ::flyteidl::core::DynamicJobSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::DynamicJobSpec::InitAsDefaultInstance();
}

void InitDefaultsDynamicJobSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDynamicJobSpecImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, min_successes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, tasks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::DynamicJobSpec, subworkflows_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::DynamicJobSpec)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_DynamicJobSpec_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/dynamic_job.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037flyteidl/core/dynamic_job.proto\022\rflyte"
      "idl.core\032\031flyteidl/core/tasks.proto\032\034fly"
      "teidl/core/workflow.proto\032\034flyteidl/core"
      "/literals.proto\"\327\001\n\016DynamicJobSpec\022\"\n\005no"
      "des\030\001 \003(\0132\023.flyteidl.core.Node\022\025\n\rmin_su"
      "ccesses\030\002 \001(\003\022\'\n\007outputs\030\003 \003(\0132\026.flyteid"
      "l.core.Binding\022*\n\005tasks\030\004 \003(\0132\033.flyteidl"
      ".core.TaskTemplate\0225\n\014subworkflows\030\005 \003(\013"
      "2\037.flyteidl.core.WorkflowTemplateB2Z0git"
      "hub.com/lyft/flyteidl/gen/pb-go/flyteidl"
      "/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 413);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/dynamic_job.proto", &protobuf_RegisterTypes);
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fworkflow_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto
namespace flyteidl {
namespace core {

// ===================================================================

void DynamicJobSpec::InitAsDefaultInstance() {
}
void DynamicJobSpec::clear_nodes() {
  nodes_.Clear();
}
void DynamicJobSpec::clear_outputs() {
  outputs_.Clear();
}
void DynamicJobSpec::clear_tasks() {
  tasks_.Clear();
}
void DynamicJobSpec::clear_subworkflows() {
  subworkflows_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicJobSpec::kNodesFieldNumber;
const int DynamicJobSpec::kMinSuccessesFieldNumber;
const int DynamicJobSpec::kOutputsFieldNumber;
const int DynamicJobSpec::kTasksFieldNumber;
const int DynamicJobSpec::kSubworkflowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicJobSpec::DynamicJobSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::InitDefaultsDynamicJobSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.DynamicJobSpec)
}
DynamicJobSpec::DynamicJobSpec(const DynamicJobSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      outputs_(from.outputs_),
      tasks_(from.tasks_),
      subworkflows_(from.subworkflows_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  min_successes_ = from.min_successes_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.DynamicJobSpec)
}

void DynamicJobSpec::SharedCtor() {
  min_successes_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

DynamicJobSpec::~DynamicJobSpec() {
  // @@protoc_insertion_point(destructor:flyteidl.core.DynamicJobSpec)
  SharedDtor();
}

void DynamicJobSpec::SharedDtor() {
}

void DynamicJobSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DynamicJobSpec::descriptor() {
  ::protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicJobSpec& DynamicJobSpec::default_instance() {
  ::protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::InitDefaultsDynamicJobSpec();
  return *internal_default_instance();
}

DynamicJobSpec* DynamicJobSpec::New(::google::protobuf::Arena* arena) const {
  DynamicJobSpec* n = new DynamicJobSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DynamicJobSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.DynamicJobSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  outputs_.Clear();
  tasks_.Clear();
  subworkflows_.Clear();
  min_successes_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DynamicJobSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.DynamicJobSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_successes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_successes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.Binding outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.TaskTemplate tasks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.WorkflowTemplate subworkflows = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_subworkflows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.DynamicJobSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.DynamicJobSpec)
  return false;
#undef DO_
}

void DynamicJobSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.DynamicJobSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(static_cast<int>(i)), output);
  }

  // int64 min_successes = 2;
  if (this->min_successes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->min_successes(), output);
  }

  // repeated .flyteidl.core.Binding outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->outputs(static_cast<int>(i)), output);
  }

  // repeated .flyteidl.core.TaskTemplate tasks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tasks(static_cast<int>(i)), output);
  }

  // repeated .flyteidl.core.WorkflowTemplate subworkflows = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subworkflows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->subworkflows(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.DynamicJobSpec)
}

::google::protobuf::uint8* DynamicJobSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.DynamicJobSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // int64 min_successes = 2;
  if (this->min_successes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->min_successes(), target);
  }

  // repeated .flyteidl.core.Binding outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->outputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .flyteidl.core.TaskTemplate tasks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->tasks(static_cast<int>(i)), deterministic, target);
  }

  // repeated .flyteidl.core.WorkflowTemplate subworkflows = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subworkflows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->subworkflows(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.DynamicJobSpec)
  return target;
}

size_t DynamicJobSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.DynamicJobSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.core.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.Binding outputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.TaskTemplate tasks = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tasks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasks(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.WorkflowTemplate subworkflows = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->subworkflows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subworkflows(static_cast<int>(i)));
    }
  }

  // int64 min_successes = 2;
  if (this->min_successes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_successes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DynamicJobSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.DynamicJobSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicJobSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicJobSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.DynamicJobSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.DynamicJobSpec)
    MergeFrom(*source);
  }
}

void DynamicJobSpec::MergeFrom(const DynamicJobSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.DynamicJobSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  outputs_.MergeFrom(from.outputs_);
  tasks_.MergeFrom(from.tasks_);
  subworkflows_.MergeFrom(from.subworkflows_);
  if (from.min_successes() != 0) {
    set_min_successes(from.min_successes());
  }
}

void DynamicJobSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.DynamicJobSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicJobSpec::CopyFrom(const DynamicJobSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.DynamicJobSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicJobSpec::IsInitialized() const {
  return true;
}

void DynamicJobSpec::Swap(DynamicJobSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicJobSpec::InternalSwap(DynamicJobSpec* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  outputs_.InternalSwap(&other->outputs_);
  tasks_.InternalSwap(&other->tasks_);
  subworkflows_.InternalSwap(&other->subworkflows_);
  swap(min_successes_, other->min_successes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DynamicJobSpec::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fdynamic_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
