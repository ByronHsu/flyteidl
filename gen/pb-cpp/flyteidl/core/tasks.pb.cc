// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/tasks.proto

#include "flyteidl/core/tasks.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class Resources_ResourceEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resources_ResourceEntry>
      _instance;
} _Resources_ResourceEntry_default_instance_;
class ResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resources>
      _instance;
} _Resources_default_instance_;
class RuntimeMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeMetadata>
      _instance;
} _RuntimeMetadata_default_instance_;
class TaskMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskMetadata>
      _instance;
} _TaskMetadata_default_instance_;
class TaskTemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskTemplate>
      _instance;
  const ::flyteidl::core::Container* container_;
} _TaskTemplate_default_instance_;
class ContainerPortDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerPort>
      _instance;
} _ContainerPort_default_instance_;
class ContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Container>
      _instance;
} _Container_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2ftasks_2eproto {
void InitDefaultsResources_ResourceEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_Resources_ResourceEntry_default_instance_;
    new (ptr) ::flyteidl::core::Resources_ResourceEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Resources_ResourceEntry::InitAsDefaultInstance();
}

void InitDefaultsResources_ResourceEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResources_ResourceEntryImpl);
}

void InitDefaultsResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources_ResourceEntry();
  {
    void* ptr = &::flyteidl::core::_Resources_default_instance_;
    new (ptr) ::flyteidl::core::Resources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Resources::InitAsDefaultInstance();
}

void InitDefaultsResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResourcesImpl);
}

void InitDefaultsRuntimeMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_RuntimeMetadata_default_instance_;
    new (ptr) ::flyteidl::core::RuntimeMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::RuntimeMetadata::InitAsDefaultInstance();
}

void InitDefaultsRuntimeMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeMetadataImpl);
}

void InitDefaultsTaskMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsRuntimeMetadata();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsRetryStrategy();
  {
    void* ptr = &::flyteidl::core::_TaskMetadata_default_instance_;
    new (ptr) ::flyteidl::core::TaskMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TaskMetadata::InitAsDefaultInstance();
}

void InitDefaultsTaskMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskMetadataImpl);
}

void InitDefaultsTaskTemplateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fidentifier_2eproto::InitDefaultsIdentifier();
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskMetadata();
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsTypedInterface();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainer();
  {
    void* ptr = &::flyteidl::core::_TaskTemplate_default_instance_;
    new (ptr) ::flyteidl::core::TaskTemplate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TaskTemplate::InitAsDefaultInstance();
}

void InitDefaultsTaskTemplate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTaskTemplateImpl);
}

void InitDefaultsContainerPortImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_ContainerPort_default_instance_;
    new (ptr) ::flyteidl::core::ContainerPort();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ContainerPort::InitAsDefaultInstance();
}

void InitDefaultsContainerPort() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerPortImpl);
}

void InitDefaultsContainerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsKeyValuePair();
  protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainerPort();
  {
    void* ptr = &::flyteidl::core::_Container_default_instance_;
    new (ptr) ::flyteidl::core::Container();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Container::InitAsDefaultInstance();
}

void InitDefaultsContainer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources_ResourceEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources_ResourceEntry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources_ResourceEntry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources, requests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Resources, limits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RuntimeMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RuntimeMetadata, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RuntimeMetadata, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RuntimeMetadata, flavor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, discoverable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, runtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, discovery_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskMetadata, deprecated_error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, custom_),
  offsetof(::flyteidl::core::TaskTemplateDefaultTypeInternal, container_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TaskTemplate, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerPort, container_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Container, ports_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::Resources_ResourceEntry)},
  { 7, -1, sizeof(::flyteidl::core::Resources)},
  { 14, -1, sizeof(::flyteidl::core::RuntimeMetadata)},
  { 22, -1, sizeof(::flyteidl::core::TaskMetadata)},
  { 33, -1, sizeof(::flyteidl::core::TaskTemplate)},
  { 45, -1, sizeof(::flyteidl::core::ContainerPort)},
  { 51, -1, sizeof(::flyteidl::core::Container)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Resources_ResourceEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Resources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_RuntimeMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TaskMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TaskTemplate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ContainerPort_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Container_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/tasks.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031flyteidl/core/tasks.proto\022\rflyteidl.co"
      "re\032\036flyteidl/core/identifier.proto\032\035flyt"
      "eidl/core/interface.proto\032\034flyteidl/core"
      "/literals.proto\032\036google/protobuf/duratio"
      "n.proto\032\034google/protobuf/struct.proto\"\232\002"
      "\n\tResources\0228\n\010requests\030\001 \003(\0132&.flyteidl"
      ".core.Resources.ResourceEntry\0226\n\006limits\030"
      "\002 \003(\0132&.flyteidl.core.Resources.Resource"
      "Entry\032S\n\rResourceEntry\0223\n\004name\030\001 \001(\0162%.f"
      "lyteidl.core.Resources.ResourceName\022\r\n\005v"
      "alue\030\002 \001(\t\"F\n\014ResourceName\022\013\n\007UNKNOWN\020\000\022"
      "\007\n\003CPU\020\001\022\007\n\003GPU\020\002\022\n\n\006MEMORY\020\003\022\013\n\007STORAGE"
      "\020\004\"\225\001\n\017RuntimeMetadata\0228\n\004type\030\001 \001(\0162*.f"
      "lyteidl.core.RuntimeMetadata.RuntimeType"
      "\022\017\n\007version\030\002 \001(\t\022\016\n\006flavor\030\003 \001(\t\"\'\n\013Run"
      "timeType\022\t\n\005OTHER\020\000\022\r\n\tFLYTE_SDK\020\001\"\355\001\n\014T"
      "askMetadata\022\024\n\014discoverable\030\001 \001(\010\022/\n\007run"
      "time\030\002 \001(\0132\036.flyteidl.core.RuntimeMetada"
      "ta\022*\n\007timeout\030\004 \001(\0132\031.google.protobuf.Du"
      "ration\022-\n\007retries\030\005 \001(\0132\034.flyteidl.core."
      "RetryStrategy\022\031\n\021discovery_version\030\006 \001(\t"
      "\022 \n\030deprecated_error_message\030\007 \001(\t\"\206\002\n\014T"
      "askTemplate\022%\n\002id\030\001 \001(\0132\031.flyteidl.core."
      "Identifier\022\014\n\004type\030\002 \001(\t\022-\n\010metadata\030\003 \001"
      "(\0132\033.flyteidl.core.TaskMetadata\0220\n\tinter"
      "face\030\004 \001(\0132\035.flyteidl.core.TypedInterfac"
      "e\022\'\n\006custom\030\005 \001(\0132\027.google.protobuf.Stru"
      "ct\022-\n\tcontainer\030\006 \001(\0132\030.flyteidl.core.Co"
      "ntainerH\000B\010\n\006target\"\'\n\rContainerPort\022\026\n\016"
      "container_port\030\001 \001(\r\"\352\001\n\tContainer\022\r\n\005im"
      "age\030\001 \001(\t\022\017\n\007command\030\002 \003(\t\022\014\n\004args\030\003 \003(\t"
      "\022+\n\tresources\030\004 \001(\0132\030.flyteidl.core.Reso"
      "urces\022(\n\003env\030\005 \003(\0132\033.flyteidl.core.KeyVa"
      "luePair\022+\n\006config\030\006 \003(\0132\033.flyteidl.core."
      "KeyValuePair\022+\n\005ports\030\007 \003(\0132\034.flyteidl.c"
      "ore.ContainerPortB2Z0github.com/lyft/fly"
      "teidl/gen/pb-go/flyteidl/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1477);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/tasks.proto", &protobuf_RegisterTypes);
  ::protobuf_flyteidl_2fcore_2fidentifier_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2ftasks_2eproto
namespace flyteidl {
namespace core {
const ::google::protobuf::EnumDescriptor* Resources_ResourceName_descriptor() {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_enum_descriptors[0];
}
bool Resources_ResourceName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Resources_ResourceName Resources::UNKNOWN;
const Resources_ResourceName Resources::CPU;
const Resources_ResourceName Resources::GPU;
const Resources_ResourceName Resources::MEMORY;
const Resources_ResourceName Resources::STORAGE;
const Resources_ResourceName Resources::ResourceName_MIN;
const Resources_ResourceName Resources::ResourceName_MAX;
const int Resources::ResourceName_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RuntimeMetadata_RuntimeType_descriptor() {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_enum_descriptors[1];
}
bool RuntimeMetadata_RuntimeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RuntimeMetadata_RuntimeType RuntimeMetadata::OTHER;
const RuntimeMetadata_RuntimeType RuntimeMetadata::FLYTE_SDK;
const RuntimeMetadata_RuntimeType RuntimeMetadata::RuntimeType_MIN;
const RuntimeMetadata_RuntimeType RuntimeMetadata::RuntimeType_MAX;
const int RuntimeMetadata::RuntimeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Resources_ResourceEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resources_ResourceEntry::kNameFieldNumber;
const int Resources_ResourceEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resources_ResourceEntry::Resources_ResourceEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources_ResourceEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Resources.ResourceEntry)
}
Resources_ResourceEntry::Resources_ResourceEntry(const Resources_ResourceEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  name_ = from.name_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Resources.ResourceEntry)
}

void Resources_ResourceEntry::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = 0;
  _cached_size_ = 0;
}

Resources_ResourceEntry::~Resources_ResourceEntry() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Resources.ResourceEntry)
  SharedDtor();
}

void Resources_ResourceEntry::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Resources_ResourceEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Resources_ResourceEntry::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resources_ResourceEntry& Resources_ResourceEntry::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources_ResourceEntry();
  return *internal_default_instance();
}

Resources_ResourceEntry* Resources_ResourceEntry::New(::google::protobuf::Arena* arena) const {
  Resources_ResourceEntry* n = new Resources_ResourceEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Resources_ResourceEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Resources.ResourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = 0;
  _internal_metadata_.Clear();
}

bool Resources_ResourceEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Resources.ResourceEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Resources.ResourceName name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_name(static_cast< ::flyteidl::core::Resources_ResourceName >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Resources.ResourceEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Resources.ResourceEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Resources.ResourceEntry)
  return false;
#undef DO_
}

void Resources_ResourceEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Resources.ResourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Resources.ResourceName name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->name(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Resources.ResourceEntry.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Resources.ResourceEntry)
}

::google::protobuf::uint8* Resources_ResourceEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Resources.ResourceEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Resources.ResourceName name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Resources.ResourceEntry.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Resources.ResourceEntry)
  return target;
}

size_t Resources_ResourceEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Resources.ResourceEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .flyteidl.core.Resources.ResourceName name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Resources_ResourceEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Resources.ResourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Resources_ResourceEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resources_ResourceEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Resources.ResourceEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Resources.ResourceEntry)
    MergeFrom(*source);
  }
}

void Resources_ResourceEntry::MergeFrom(const Resources_ResourceEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Resources.ResourceEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.name() != 0) {
    set_name(from.name());
  }
}

void Resources_ResourceEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Resources.ResourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resources_ResourceEntry::CopyFrom(const Resources_ResourceEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Resources.ResourceEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resources_ResourceEntry::IsInitialized() const {
  return true;
}

void Resources_ResourceEntry::Swap(Resources_ResourceEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resources_ResourceEntry::InternalSwap(Resources_ResourceEntry* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Resources_ResourceEntry::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resources::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resources::kRequestsFieldNumber;
const int Resources::kLimitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resources::Resources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Resources)
}
Resources::Resources(const Resources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_),
      limits_(from.limits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Resources)
}

void Resources::SharedCtor() {
  _cached_size_ = 0;
}

Resources::~Resources() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Resources)
  SharedDtor();
}

void Resources::SharedDtor() {
}

void Resources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Resources::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resources& Resources::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsResources();
  return *internal_default_instance();
}

Resources* Resources::New(::google::protobuf::Arena* arena) const {
  Resources* n = new Resources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Resources::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  limits_.Clear();
  _internal_metadata_.Clear();
}

bool Resources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Resources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.Resources.ResourceEntry requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.Resources.ResourceEntry limits = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Resources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Resources)
  return false;
#undef DO_
}

void Resources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Resources.ResourceEntry requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->requests(static_cast<int>(i)), output);
  }

  // repeated .flyteidl.core.Resources.ResourceEntry limits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->limits(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Resources)
}

::google::protobuf::uint8* Resources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Resources.ResourceEntry requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  // repeated .flyteidl.core.Resources.ResourceEntry limits = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->limits(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Resources)
  return target;
}

size_t Resources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Resources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.core.Resources.ResourceEntry requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.Resources.ResourceEntry limits = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->limits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->limits(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Resources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  const Resources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Resources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Resources)
    MergeFrom(*source);
  }
}

void Resources::MergeFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
  limits_.MergeFrom(from.limits_);
}

void Resources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resources::CopyFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resources::IsInitialized() const {
  return true;
}

void Resources::Swap(Resources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resources::InternalSwap(Resources* other) {
  using std::swap;
  requests_.InternalSwap(&other->requests_);
  limits_.InternalSwap(&other->limits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Resources::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeMetadata::kTypeFieldNumber;
const int RuntimeMetadata::kVersionFieldNumber;
const int RuntimeMetadata::kFlavorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeMetadata::RuntimeMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsRuntimeMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.RuntimeMetadata)
}
RuntimeMetadata::RuntimeMetadata(const RuntimeMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  flavor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.flavor().size() > 0) {
    flavor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flavor_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.RuntimeMetadata)
}

void RuntimeMetadata::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flavor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

RuntimeMetadata::~RuntimeMetadata() {
  // @@protoc_insertion_point(destructor:flyteidl.core.RuntimeMetadata)
  SharedDtor();
}

void RuntimeMetadata::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flavor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RuntimeMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeMetadata::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeMetadata& RuntimeMetadata::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsRuntimeMetadata();
  return *internal_default_instance();
}

RuntimeMetadata* RuntimeMetadata::New(::google::protobuf::Arena* arena) const {
  RuntimeMetadata* n = new RuntimeMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flavor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool RuntimeMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.RuntimeMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.RuntimeMetadata.RuntimeType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::flyteidl::core::RuntimeMetadata_RuntimeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.RuntimeMetadata.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string flavor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flavor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->flavor().data(), static_cast<int>(this->flavor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.RuntimeMetadata.flavor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.RuntimeMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.RuntimeMetadata)
  return false;
#undef DO_
}

void RuntimeMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.RuntimeMetadata.RuntimeType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.RuntimeMetadata.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string flavor = 3;
  if (this->flavor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flavor().data(), static_cast<int>(this->flavor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.RuntimeMetadata.flavor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->flavor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.RuntimeMetadata)
}

::google::protobuf::uint8* RuntimeMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.RuntimeMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.RuntimeMetadata.RuntimeType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.RuntimeMetadata.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string flavor = 3;
  if (this->flavor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->flavor().data(), static_cast<int>(this->flavor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.RuntimeMetadata.flavor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->flavor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.RuntimeMetadata)
  return target;
}

size_t RuntimeMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.RuntimeMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string flavor = 3;
  if (this->flavor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->flavor());
  }

  // .flyteidl.core.RuntimeMetadata.RuntimeType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.RuntimeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.RuntimeMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.RuntimeMetadata)
    MergeFrom(*source);
  }
}

void RuntimeMetadata::MergeFrom(const RuntimeMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.RuntimeMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.flavor().size() > 0) {

    flavor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flavor_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RuntimeMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.RuntimeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeMetadata::CopyFrom(const RuntimeMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.RuntimeMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeMetadata::IsInitialized() const {
  return true;
}

void RuntimeMetadata::Swap(RuntimeMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeMetadata::InternalSwap(RuntimeMetadata* other) {
  using std::swap;
  version_.Swap(&other->version_);
  flavor_.Swap(&other->flavor_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeMetadata::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskMetadata::InitAsDefaultInstance() {
  ::flyteidl::core::_TaskMetadata_default_instance_._instance.get_mutable()->runtime_ = const_cast< ::flyteidl::core::RuntimeMetadata*>(
      ::flyteidl::core::RuntimeMetadata::internal_default_instance());
  ::flyteidl::core::_TaskMetadata_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::flyteidl::core::_TaskMetadata_default_instance_._instance.get_mutable()->retries_ = const_cast< ::flyteidl::core::RetryStrategy*>(
      ::flyteidl::core::RetryStrategy::internal_default_instance());
}
void TaskMetadata::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
void TaskMetadata::clear_retries() {
  if (GetArenaNoVirtual() == NULL && retries_ != NULL) {
    delete retries_;
  }
  retries_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskMetadata::kDiscoverableFieldNumber;
const int TaskMetadata::kRuntimeFieldNumber;
const int TaskMetadata::kTimeoutFieldNumber;
const int TaskMetadata::kRetriesFieldNumber;
const int TaskMetadata::kDiscoveryVersionFieldNumber;
const int TaskMetadata::kDeprecatedErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskMetadata::TaskMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TaskMetadata)
}
TaskMetadata::TaskMetadata(const TaskMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  discovery_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.discovery_version().size() > 0) {
    discovery_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_version_);
  }
  deprecated_error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deprecated_error_message().size() > 0) {
    deprecated_error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deprecated_error_message_);
  }
  if (from.has_runtime()) {
    runtime_ = new ::flyteidl::core::RuntimeMetadata(*from.runtime_);
  } else {
    runtime_ = NULL;
  }
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  if (from.has_retries()) {
    retries_ = new ::flyteidl::core::RetryStrategy(*from.retries_);
  } else {
    retries_ = NULL;
  }
  discoverable_ = from.discoverable_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TaskMetadata)
}

void TaskMetadata::SharedCtor() {
  discovery_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecated_error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&runtime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discoverable_) -
      reinterpret_cast<char*>(&runtime_)) + sizeof(discoverable_));
  _cached_size_ = 0;
}

TaskMetadata::~TaskMetadata() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TaskMetadata)
  SharedDtor();
}

void TaskMetadata::SharedDtor() {
  discovery_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecated_error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete runtime_;
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete retries_;
}

void TaskMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskMetadata::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskMetadata& TaskMetadata::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskMetadata();
  return *internal_default_instance();
}

TaskMetadata* TaskMetadata::New(::google::protobuf::Arena* arena) const {
  TaskMetadata* n = new TaskMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TaskMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  discovery_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deprecated_error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && runtime_ != NULL) {
    delete runtime_;
  }
  runtime_ = NULL;
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && retries_ != NULL) {
    delete retries_;
  }
  retries_ = NULL;
  discoverable_ = false;
  _internal_metadata_.Clear();
}

bool TaskMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TaskMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool discoverable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &discoverable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.RuntimeMetadata runtime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_runtime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.RetryStrategy retries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string discovery_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discovery_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->discovery_version().data(), static_cast<int>(this->discovery_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.TaskMetadata.discovery_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deprecated_error_message = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deprecated_error_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deprecated_error_message().data(), static_cast<int>(this->deprecated_error_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.TaskMetadata.deprecated_error_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TaskMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TaskMetadata)
  return false;
#undef DO_
}

void TaskMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TaskMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool discoverable = 1;
  if (this->discoverable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->discoverable(), output);
  }

  // .flyteidl.core.RuntimeMetadata runtime = 2;
  if (this->has_runtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->runtime_, output);
  }

  // .google.protobuf.Duration timeout = 4;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->timeout_, output);
  }

  // .flyteidl.core.RetryStrategy retries = 5;
  if (this->has_retries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->retries_, output);
  }

  // string discovery_version = 6;
  if (this->discovery_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_version().data(), static_cast<int>(this->discovery_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskMetadata.discovery_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->discovery_version(), output);
  }

  // string deprecated_error_message = 7;
  if (this->deprecated_error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deprecated_error_message().data(), static_cast<int>(this->deprecated_error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskMetadata.deprecated_error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deprecated_error_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TaskMetadata)
}

::google::protobuf::uint8* TaskMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TaskMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool discoverable = 1;
  if (this->discoverable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->discoverable(), target);
  }

  // .flyteidl.core.RuntimeMetadata runtime = 2;
  if (this->has_runtime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->runtime_, deterministic, target);
  }

  // .google.protobuf.Duration timeout = 4;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->timeout_, deterministic, target);
  }

  // .flyteidl.core.RetryStrategy retries = 5;
  if (this->has_retries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->retries_, deterministic, target);
  }

  // string discovery_version = 6;
  if (this->discovery_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_version().data(), static_cast<int>(this->discovery_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskMetadata.discovery_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->discovery_version(), target);
  }

  // string deprecated_error_message = 7;
  if (this->deprecated_error_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deprecated_error_message().data(), static_cast<int>(this->deprecated_error_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskMetadata.deprecated_error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deprecated_error_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TaskMetadata)
  return target;
}

size_t TaskMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TaskMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string discovery_version = 6;
  if (this->discovery_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->discovery_version());
  }

  // string deprecated_error_message = 7;
  if (this->deprecated_error_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deprecated_error_message());
  }

  // .flyteidl.core.RuntimeMetadata runtime = 2;
  if (this->has_runtime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->runtime_);
  }

  // .google.protobuf.Duration timeout = 4;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timeout_);
  }

  // .flyteidl.core.RetryStrategy retries = 5;
  if (this->has_retries()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->retries_);
  }

  // bool discoverable = 1;
  if (this->discoverable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TaskMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TaskMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TaskMetadata)
    MergeFrom(*source);
  }
}

void TaskMetadata::MergeFrom(const TaskMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TaskMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.discovery_version().size() > 0) {

    discovery_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_version_);
  }
  if (from.deprecated_error_message().size() > 0) {

    deprecated_error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deprecated_error_message_);
  }
  if (from.has_runtime()) {
    mutable_runtime()->::flyteidl::core::RuntimeMetadata::MergeFrom(from.runtime());
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  if (from.has_retries()) {
    mutable_retries()->::flyteidl::core::RetryStrategy::MergeFrom(from.retries());
  }
  if (from.discoverable() != 0) {
    set_discoverable(from.discoverable());
  }
}

void TaskMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TaskMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskMetadata::CopyFrom(const TaskMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TaskMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskMetadata::IsInitialized() const {
  return true;
}

void TaskMetadata::Swap(TaskMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskMetadata::InternalSwap(TaskMetadata* other) {
  using std::swap;
  discovery_version_.Swap(&other->discovery_version_);
  deprecated_error_message_.Swap(&other->deprecated_error_message_);
  swap(runtime_, other->runtime_);
  swap(timeout_, other->timeout_);
  swap(retries_, other->retries_);
  swap(discoverable_, other->discoverable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskMetadata::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TaskTemplate::InitAsDefaultInstance() {
  ::flyteidl::core::_TaskTemplate_default_instance_._instance.get_mutable()->id_ = const_cast< ::flyteidl::core::Identifier*>(
      ::flyteidl::core::Identifier::internal_default_instance());
  ::flyteidl::core::_TaskTemplate_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::flyteidl::core::TaskMetadata*>(
      ::flyteidl::core::TaskMetadata::internal_default_instance());
  ::flyteidl::core::_TaskTemplate_default_instance_._instance.get_mutable()->interface_ = const_cast< ::flyteidl::core::TypedInterface*>(
      ::flyteidl::core::TypedInterface::internal_default_instance());
  ::flyteidl::core::_TaskTemplate_default_instance_._instance.get_mutable()->custom_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::flyteidl::core::_TaskTemplate_default_instance_.container_ = const_cast< ::flyteidl::core::Container*>(
      ::flyteidl::core::Container::internal_default_instance());
}
void TaskTemplate::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void TaskTemplate::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void TaskTemplate::clear_custom() {
  if (GetArenaNoVirtual() == NULL && custom_ != NULL) {
    delete custom_;
  }
  custom_ = NULL;
}
void TaskTemplate::set_allocated_container(::flyteidl::core::Container* container) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_target();
  if (container) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      container = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, container, submessage_arena);
    }
    set_has_container();
    target_.container_ = container;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.TaskTemplate.container)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskTemplate::kIdFieldNumber;
const int TaskTemplate::kTypeFieldNumber;
const int TaskTemplate::kMetadataFieldNumber;
const int TaskTemplate::kInterfaceFieldNumber;
const int TaskTemplate::kCustomFieldNumber;
const int TaskTemplate::kContainerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskTemplate::TaskTemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskTemplate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TaskTemplate)
}
TaskTemplate::TaskTemplate(const TaskTemplate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_id()) {
    id_ = new ::flyteidl::core::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_metadata()) {
    metadata_ = new ::flyteidl::core::TaskMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::flyteidl::core::TypedInterface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  if (from.has_custom()) {
    custom_ = new ::google::protobuf::Struct(*from.custom_);
  } else {
    custom_ = NULL;
  }
  clear_has_target();
  switch (from.target_case()) {
    case kContainer: {
      mutable_container()->::flyteidl::core::Container::MergeFrom(from.container());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TaskTemplate)
}

void TaskTemplate::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&custom_) -
      reinterpret_cast<char*>(&id_)) + sizeof(custom_));
  clear_has_target();
  _cached_size_ = 0;
}

TaskTemplate::~TaskTemplate() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TaskTemplate)
  SharedDtor();
}

void TaskTemplate::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete interface_;
  if (this != internal_default_instance()) delete custom_;
  if (has_target()) {
    clear_target();
  }
}

void TaskTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskTemplate::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskTemplate& TaskTemplate::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsTaskTemplate();
  return *internal_default_instance();
}

TaskTemplate* TaskTemplate::New(::google::protobuf::Arena* arena) const {
  TaskTemplate* n = new TaskTemplate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskTemplate::clear_target() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.TaskTemplate)
  switch (target_case()) {
    case kContainer: {
      delete target_.container_;
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_NOT_SET;
}


void TaskTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TaskTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  if (GetArenaNoVirtual() == NULL && custom_ != NULL) {
    delete custom_;
  }
  custom_ = NULL;
  clear_target();
  _internal_metadata_.Clear();
}

bool TaskTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TaskTemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.TaskTemplate.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.TaskMetadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.TypedInterface interface = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct custom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_custom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Container container = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_container()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TaskTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TaskTemplate)
  return false;
#undef DO_
}

void TaskTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TaskTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskTemplate.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // .flyteidl.core.TaskMetadata metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->metadata_, output);
  }

  // .flyteidl.core.TypedInterface interface = 4;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->interface_, output);
  }

  // .google.protobuf.Struct custom = 5;
  if (this->has_custom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->custom_, output);
  }

  // .flyteidl.core.Container container = 6;
  if (has_container()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *target_.container_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TaskTemplate)
}

::google::protobuf::uint8* TaskTemplate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TaskTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->id_, deterministic, target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.TaskTemplate.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // .flyteidl.core.TaskMetadata metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->metadata_, deterministic, target);
  }

  // .flyteidl.core.TypedInterface interface = 4;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->interface_, deterministic, target);
  }

  // .google.protobuf.Struct custom = 5;
  if (this->has_custom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->custom_, deterministic, target);
  }

  // .flyteidl.core.Container container = 6;
  if (has_container()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *target_.container_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TaskTemplate)
  return target;
}

size_t TaskTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TaskTemplate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .flyteidl.core.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  // .flyteidl.core.TaskMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .flyteidl.core.TypedInterface interface = 4;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  // .google.protobuf.Struct custom = 5;
  if (this->has_custom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->custom_);
  }

  switch (target_case()) {
    // .flyteidl.core.Container container = 6;
    case kContainer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_.container_);
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskTemplate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TaskTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskTemplate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskTemplate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TaskTemplate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TaskTemplate)
    MergeFrom(*source);
  }
}

void TaskTemplate::MergeFrom(const TaskTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TaskTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_id()) {
    mutable_id()->::flyteidl::core::Identifier::MergeFrom(from.id());
  }
  if (from.has_metadata()) {
    mutable_metadata()->::flyteidl::core::TaskMetadata::MergeFrom(from.metadata());
  }
  if (from.has_interface()) {
    mutable_interface()->::flyteidl::core::TypedInterface::MergeFrom(from.interface());
  }
  if (from.has_custom()) {
    mutable_custom()->::google::protobuf::Struct::MergeFrom(from.custom());
  }
  switch (from.target_case()) {
    case kContainer: {
      mutable_container()->::flyteidl::core::Container::MergeFrom(from.container());
      break;
    }
    case TARGET_NOT_SET: {
      break;
    }
  }
}

void TaskTemplate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TaskTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskTemplate::CopyFrom(const TaskTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TaskTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskTemplate::IsInitialized() const {
  return true;
}

void TaskTemplate::Swap(TaskTemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskTemplate::InternalSwap(TaskTemplate* other) {
  using std::swap;
  type_.Swap(&other->type_);
  swap(id_, other->id_);
  swap(metadata_, other->metadata_);
  swap(interface_, other->interface_);
  swap(custom_, other->custom_);
  swap(target_, other->target_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskTemplate::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerPort::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerPort::kContainerPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerPort::ContainerPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainerPort();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ContainerPort)
}
ContainerPort::ContainerPort(const ContainerPort& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_port_ = from.container_port_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ContainerPort)
}

void ContainerPort::SharedCtor() {
  container_port_ = 0u;
  _cached_size_ = 0;
}

ContainerPort::~ContainerPort() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ContainerPort)
  SharedDtor();
}

void ContainerPort::SharedDtor() {
}

void ContainerPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerPort::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerPort& ContainerPort::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainerPort();
  return *internal_default_instance();
}

ContainerPort* ContainerPort::New(::google::protobuf::Arena* arena) const {
  ContainerPort* n = new ContainerPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerPort::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ContainerPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_port_ = 0u;
  _internal_metadata_.Clear();
}

bool ContainerPort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ContainerPort)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 container_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &container_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ContainerPort)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ContainerPort)
  return false;
#undef DO_
}

void ContainerPort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ContainerPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 container_port = 1;
  if (this->container_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->container_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ContainerPort)
}

::google::protobuf::uint8* ContainerPort::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ContainerPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 container_port = 1;
  if (this->container_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->container_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ContainerPort)
  return target;
}

size_t ContainerPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ContainerPort)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 container_port = 1;
  if (this->container_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->container_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerPort::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ContainerPort)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerPort* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerPort>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ContainerPort)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ContainerPort)
    MergeFrom(*source);
  }
}

void ContainerPort::MergeFrom(const ContainerPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ContainerPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_port() != 0) {
    set_container_port(from.container_port());
  }
}

void ContainerPort::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ContainerPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerPort::CopyFrom(const ContainerPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ContainerPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerPort::IsInitialized() const {
  return true;
}

void ContainerPort::Swap(ContainerPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerPort::InternalSwap(ContainerPort* other) {
  using std::swap;
  swap(container_port_, other->container_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerPort::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Container::InitAsDefaultInstance() {
  ::flyteidl::core::_Container_default_instance_._instance.get_mutable()->resources_ = const_cast< ::flyteidl::core::Resources*>(
      ::flyteidl::core::Resources::internal_default_instance());
}
void Container::clear_env() {
  env_.Clear();
}
void Container::clear_config() {
  config_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Container::kImageFieldNumber;
const int Container::kCommandFieldNumber;
const int Container::kArgsFieldNumber;
const int Container::kResourcesFieldNumber;
const int Container::kEnvFieldNumber;
const int Container::kConfigFieldNumber;
const int Container::kPortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Container::Container()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Container)
}
Container::Container(const Container& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      command_(from.command_),
      args_(from.args_),
      env_(from.env_),
      config_(from.config_),
      ports_(from.ports_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.has_resources()) {
    resources_ = new ::flyteidl::core::Resources(*from.resources_);
  } else {
    resources_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Container)
}

void Container::SharedCtor() {
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resources_ = NULL;
  _cached_size_ = 0;
}

Container::~Container() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Container)
  SharedDtor();
}

void Container::SharedDtor() {
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resources_;
}

void Container::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Container::descriptor() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Container& Container::default_instance() {
  ::protobuf_flyteidl_2fcore_2ftasks_2eproto::InitDefaultsContainer();
  return *internal_default_instance();
}

Container* Container::New(::google::protobuf::Arena* arena) const {
  Container* n = new Container;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Container::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.Clear();
  args_.Clear();
  env_.Clear();
  config_.Clear();
  ports_.Clear();
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  _internal_metadata_.Clear();
}

bool Container::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Container)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image().data(), static_cast<int>(this->image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Container.image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string command = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command(this->command_size() - 1).data(),
            static_cast<int>(this->command(this->command_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Container.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Container.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Resources resources = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.KeyValuePair env = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_env()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.KeyValuePair config = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .flyteidl.core.ContainerPort ports = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Container)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Container)
  return false;
#undef DO_
}

void Container::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image(), output);
  }

  // repeated string command = 2;
  for (int i = 0, n = this->command_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command(i).data(), static_cast<int>(this->command(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.command");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->command(i), output);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  // .flyteidl.core.Resources resources = 4;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->resources_, output);
  }

  // repeated .flyteidl.core.KeyValuePair env = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->env_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->env(static_cast<int>(i)), output);
  }

  // repeated .flyteidl.core.KeyValuePair config = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->config(static_cast<int>(i)), output);
  }

  // repeated .flyteidl.core.ContainerPort ports = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->ports(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Container)
}

::google::protobuf::uint8* Container::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image(), target);
  }

  // repeated string command = 2;
  for (int i = 0, n = this->command_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command(i).data(), static_cast<int>(this->command(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.command");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->command(i), target);
  }

  // repeated string args = 3;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Container.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  // .flyteidl.core.Resources resources = 4;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->resources_, deterministic, target);
  }

  // repeated .flyteidl.core.KeyValuePair env = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->env_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->env(static_cast<int>(i)), deterministic, target);
  }

  // repeated .flyteidl.core.KeyValuePair config = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->config(static_cast<int>(i)), deterministic, target);
  }

  // repeated .flyteidl.core.ContainerPort ports = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->ports(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Container)
  return target;
}

size_t Container::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Container)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string command = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->command_size());
  for (int i = 0, n = this->command_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->command(i));
  }

  // repeated string args = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated .flyteidl.core.KeyValuePair env = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->env_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->env(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.KeyValuePair config = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config(static_cast<int>(i)));
    }
  }

  // repeated .flyteidl.core.ContainerPort ports = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->ports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ports(static_cast<int>(i)));
    }
  }

  // string image = 1;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image());
  }

  // .flyteidl.core.Resources resources = 4;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resources_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Container::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Container)
  GOOGLE_DCHECK_NE(&from, this);
  const Container* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Container>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Container)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Container)
    MergeFrom(*source);
  }
}

void Container::MergeFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Container)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  command_.MergeFrom(from.command_);
  args_.MergeFrom(from.args_);
  env_.MergeFrom(from.env_);
  config_.MergeFrom(from.config_);
  ports_.MergeFrom(from.ports_);
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.has_resources()) {
    mutable_resources()->::flyteidl::core::Resources::MergeFrom(from.resources());
  }
}

void Container::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Container)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Container::CopyFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Container)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Container::IsInitialized() const {
  return true;
}

void Container::Swap(Container* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Container::InternalSwap(Container* other) {
  using std::swap;
  command_.InternalSwap(&other->command_);
  args_.InternalSwap(&other->args_);
  env_.InternalSwap(&other->env_);
  config_.InternalSwap(&other->config_);
  ports_.InternalSwap(&other->ports_);
  image_.Swap(&other->image_);
  swap(resources_, other->resources_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Container::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ftasks_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ftasks_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
