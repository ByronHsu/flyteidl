// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/errors.proto

#include "flyteidl/core/errors.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class ContainerErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerError>
      _instance;
} _ContainerError_default_instance_;
class ErrorDocumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorDocument>
      _instance;
} _ErrorDocument_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2ferrors_2eproto {
void InitDefaultsContainerErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_ContainerError_default_instance_;
    new (ptr) ::flyteidl::core::ContainerError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ContainerError::InitAsDefaultInstance();
}

void InitDefaultsContainerError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerErrorImpl);
}

void InitDefaultsErrorDocumentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ferrors_2eproto::InitDefaultsContainerError();
  {
    void* ptr = &::flyteidl::core::_ErrorDocument_default_instance_;
    new (ptr) ::flyteidl::core::ErrorDocument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ErrorDocument::InitAsDefaultInstance();
}

void InitDefaultsErrorDocument() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorDocumentImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerError, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerError, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ContainerError, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ErrorDocument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ErrorDocument, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::ContainerError)},
  { 8, -1, sizeof(::flyteidl::core::ErrorDocument)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ContainerError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ErrorDocument_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/errors.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032flyteidl/core/errors.proto\022\rflyteidl.c"
      "ore\"\217\001\n\016ContainerError\022\014\n\004code\030\001 \001(\t\022\017\n\007"
      "message\030\002 \001(\t\0220\n\004kind\030\003 \001(\0162\".flyteidl.c"
      "ore.ContainerError.Kind\",\n\004Kind\022\023\n\017NON_R"
      "ECOVERABLE\020\000\022\017\n\013RECOVERABLE\020\001\"=\n\rErrorDo"
      "cument\022,\n\005error\030\001 \001(\0132\035.flyteidl.core.Co"
      "ntainerErrorB2Z0github.com/lyft/flyteidl"
      "/gen/pb-go/flyteidl/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 312);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/errors.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2ferrors_2eproto
namespace flyteidl {
namespace core {
const ::google::protobuf::EnumDescriptor* ContainerError_Kind_descriptor() {
  protobuf_flyteidl_2fcore_2ferrors_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_flyteidl_2fcore_2ferrors_2eproto::file_level_enum_descriptors[0];
}
bool ContainerError_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ContainerError_Kind ContainerError::NON_RECOVERABLE;
const ContainerError_Kind ContainerError::RECOVERABLE;
const ContainerError_Kind ContainerError::Kind_MIN;
const ContainerError_Kind ContainerError::Kind_MAX;
const int ContainerError::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ContainerError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerError::kCodeFieldNumber;
const int ContainerError::kMessageFieldNumber;
const int ContainerError::kKindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerError::ContainerError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ferrors_2eproto::InitDefaultsContainerError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ContainerError)
}
ContainerError::ContainerError(const ContainerError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ContainerError)
}

void ContainerError::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _cached_size_ = 0;
}

ContainerError::~ContainerError() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ContainerError)
  SharedDtor();
}

void ContainerError::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerError::descriptor() {
  ::protobuf_flyteidl_2fcore_2ferrors_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ferrors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerError& ContainerError::default_instance() {
  ::protobuf_flyteidl_2fcore_2ferrors_2eproto::InitDefaultsContainerError();
  return *internal_default_instance();
}

ContainerError* ContainerError::New(::google::protobuf::Arena* arena) const {
  ContainerError* n = new ContainerError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerError::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ContainerError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _internal_metadata_.Clear();
}

bool ContainerError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ContainerError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ContainerError.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ContainerError.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.ContainerError.Kind kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::flyteidl::core::ContainerError_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ContainerError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ContainerError)
  return false;
#undef DO_
}

void ContainerError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ContainerError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ContainerError.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ContainerError.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .flyteidl.core.ContainerError.Kind kind = 3;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->kind(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ContainerError)
}

::google::protobuf::uint8* ContainerError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ContainerError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ContainerError.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ContainerError.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .flyteidl.core.ContainerError.Kind kind = 3;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->kind(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ContainerError)
  return target;
}

size_t ContainerError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ContainerError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .flyteidl.core.ContainerError.Kind kind = 3;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ContainerError)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ContainerError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ContainerError)
    MergeFrom(*source);
  }
}

void ContainerError::MergeFrom(const ContainerError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ContainerError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void ContainerError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ContainerError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerError::CopyFrom(const ContainerError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ContainerError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerError::IsInitialized() const {
  return true;
}

void ContainerError::Swap(ContainerError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerError::InternalSwap(ContainerError* other) {
  using std::swap;
  code_.Swap(&other->code_);
  message_.Swap(&other->message_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerError::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ferrors_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ferrors_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorDocument::InitAsDefaultInstance() {
  ::flyteidl::core::_ErrorDocument_default_instance_._instance.get_mutable()->error_ = const_cast< ::flyteidl::core::ContainerError*>(
      ::flyteidl::core::ContainerError::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorDocument::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorDocument::ErrorDocument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2ferrors_2eproto::InitDefaultsErrorDocument();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ErrorDocument)
}
ErrorDocument::ErrorDocument(const ErrorDocument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::flyteidl::core::ContainerError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ErrorDocument)
}

void ErrorDocument::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

ErrorDocument::~ErrorDocument() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ErrorDocument)
  SharedDtor();
}

void ErrorDocument::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void ErrorDocument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorDocument::descriptor() {
  ::protobuf_flyteidl_2fcore_2ferrors_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ferrors_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorDocument& ErrorDocument::default_instance() {
  ::protobuf_flyteidl_2fcore_2ferrors_2eproto::InitDefaultsErrorDocument();
  return *internal_default_instance();
}

ErrorDocument* ErrorDocument::New(::google::protobuf::Arena* arena) const {
  ErrorDocument* n = new ErrorDocument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorDocument::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ErrorDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool ErrorDocument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ErrorDocument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.ContainerError error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ErrorDocument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ErrorDocument)
  return false;
#undef DO_
}

void ErrorDocument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ErrorDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.ContainerError error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ErrorDocument)
}

::google::protobuf::uint8* ErrorDocument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ErrorDocument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.ContainerError error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->error_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ErrorDocument)
  return target;
}

size_t ErrorDocument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ErrorDocument)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.ContainerError error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorDocument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ErrorDocument)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorDocument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorDocument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ErrorDocument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ErrorDocument)
    MergeFrom(*source);
  }
}

void ErrorDocument::MergeFrom(const ErrorDocument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ErrorDocument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::flyteidl::core::ContainerError::MergeFrom(from.error());
  }
}

void ErrorDocument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ErrorDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorDocument::CopyFrom(const ErrorDocument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ErrorDocument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorDocument::IsInitialized() const {
  return true;
}

void ErrorDocument::Swap(ErrorDocument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorDocument::InternalSwap(ErrorDocument* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorDocument::GetMetadata() const {
  protobuf_flyteidl_2fcore_2ferrors_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2ferrors_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
