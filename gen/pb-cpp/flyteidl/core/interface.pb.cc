// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/interface.proto

#include "flyteidl/core/interface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Variable>
      _instance;
} _Variable_default_instance_;
class VariableMap_VariablesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableMap_VariablesEntry_DoNotUse>
      _instance;
} _VariableMap_VariablesEntry_DoNotUse_default_instance_;
class VariableMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableMap>
      _instance;
} _VariableMap_default_instance_;
class TypedInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TypedInterface>
      _instance;
} _TypedInterface_default_instance_;
class ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameter>
      _instance;
  const ::flyteidl::core::Literal* default__;
  bool required_;
} _Parameter_default_instance_;
class ParameterMap_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterMap_ParametersEntry_DoNotUse>
      _instance;
} _ParameterMap_ParametersEntry_DoNotUse_default_instance_;
class ParameterMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParameterMap>
      _instance;
} _ParameterMap_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2finterface_2eproto {
void InitDefaultsVariableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftypes_2eproto::InitDefaultsLiteralType();
  {
    void* ptr = &::flyteidl::core::_Variable_default_instance_;
    new (ptr) ::flyteidl::core::Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Variable::InitAsDefaultInstance();
}

void InitDefaultsVariable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVariableImpl);
}

void InitDefaultsVariableMap_VariablesEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariable();
  {
    void* ptr = &::flyteidl::core::_VariableMap_VariablesEntry_DoNotUse_default_instance_;
    new (ptr) ::flyteidl::core::VariableMap_VariablesEntry_DoNotUse();
  }
  ::flyteidl::core::VariableMap_VariablesEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsVariableMap_VariablesEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVariableMap_VariablesEntry_DoNotUseImpl);
}

void InitDefaultsVariableMapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariableMap_VariablesEntry_DoNotUse();
  {
    void* ptr = &::flyteidl::core::_VariableMap_default_instance_;
    new (ptr) ::flyteidl::core::VariableMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::VariableMap::InitAsDefaultInstance();
}

void InitDefaultsVariableMap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVariableMapImpl);
}

void InitDefaultsTypedInterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariableMap();
  {
    void* ptr = &::flyteidl::core::_TypedInterface_default_instance_;
    new (ptr) ::flyteidl::core::TypedInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::TypedInterface::InitAsDefaultInstance();
}

void InitDefaultsTypedInterface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTypedInterfaceImpl);
}

void InitDefaultsParameterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariable();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  {
    void* ptr = &::flyteidl::core::_Parameter_default_instance_;
    new (ptr) ::flyteidl::core::Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Parameter::InitAsDefaultInstance();
}

void InitDefaultsParameter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParameterImpl);
}

void InitDefaultsParameterMap_ParametersEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameter();
  {
    void* ptr = &::flyteidl::core::_ParameterMap_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse();
  }
  ::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsParameterMap_ParametersEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParameterMap_ParametersEntry_DoNotUseImpl);
}

void InitDefaultsParameterMapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameterMap_ParametersEntry_DoNotUse();
  {
    void* ptr = &::flyteidl::core::_ParameterMap_default_instance_;
    new (ptr) ::flyteidl::core::ParameterMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ParameterMap::InitAsDefaultInstance();
}

void InitDefaultsParameterMap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsParameterMapImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Variable, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Variable, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::VariableMap, variables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TypedInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TypedInterface, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::TypedInterface, outputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Parameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Parameter, var_),
  offsetof(::flyteidl::core::ParameterDefaultTypeInternal, default__),
  offsetof(::flyteidl::core::ParameterDefaultTypeInternal, required_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Parameter, behavior_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::ParameterMap, parameters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::Variable)},
  { 7, 14, sizeof(::flyteidl::core::VariableMap_VariablesEntry_DoNotUse)},
  { 16, -1, sizeof(::flyteidl::core::VariableMap)},
  { 22, -1, sizeof(::flyteidl::core::TypedInterface)},
  { 29, -1, sizeof(::flyteidl::core::Parameter)},
  { 38, 45, sizeof(::flyteidl::core::ParameterMap_ParametersEntry_DoNotUse)},
  { 47, -1, sizeof(::flyteidl::core::ParameterMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_VariableMap_VariablesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_VariableMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_TypedInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ParameterMap_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ParameterMap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/interface.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035flyteidl/core/interface.proto\022\rflyteid"
      "l.core\032\031flyteidl/core/types.proto\032\034flyte"
      "idl/core/literals.proto\"I\n\010Variable\022(\n\004t"
      "ype\030\001 \001(\0132\032.flyteidl.core.LiteralType\022\023\n"
      "\013description\030\002 \001(\t\"\226\001\n\013VariableMap\022<\n\tva"
      "riables\030\001 \003(\0132).flyteidl.core.VariableMa"
      "p.VariablesEntry\032I\n\016VariablesEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.flyteidl.core.V"
      "ariable:\0028\001\"i\n\016TypedInterface\022*\n\006inputs\030"
      "\001 \001(\0132\032.flyteidl.core.VariableMap\022+\n\007out"
      "puts\030\002 \001(\0132\032.flyteidl.core.VariableMap\"|"
      "\n\tParameter\022$\n\003var\030\001 \001(\0132\027.flyteidl.core"
      ".Variable\022)\n\007default\030\002 \001(\0132\026.flyteidl.co"
      "re.LiteralH\000\022\022\n\010required\030\003 \001(\010H\000B\n\n\010beha"
      "vior\"\234\001\n\014ParameterMap\022\?\n\nparameters\030\001 \003("
      "\0132+.flyteidl.core.ParameterMap.Parameter"
      "sEntry\032K\n\017ParametersEntry\022\013\n\003key\030\001 \001(\t\022\'"
      "\n\005value\030\002 \001(\0132\030.flyteidl.core.Parameter:"
      "\0028\001B2Z0github.com/lyft/flyteidl/gen/pb-g"
      "o/flyteidl/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 783);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/interface.proto", &protobuf_RegisterTypes);
  ::protobuf_flyteidl_2fcore_2ftypes_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2finterface_2eproto
namespace flyteidl {
namespace core {

// ===================================================================

void Variable::InitAsDefaultInstance() {
  ::flyteidl::core::_Variable_default_instance_._instance.get_mutable()->type_ = const_cast< ::flyteidl::core::LiteralType*>(
      ::flyteidl::core::LiteralType::internal_default_instance());
}
void Variable::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kTypeFieldNumber;
const int Variable::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Variable)
}
Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_type()) {
    type_ = new ::flyteidl::core::LiteralType(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Variable)
}

void Variable::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  _cached_size_ = 0;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Variable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable::descriptor() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Variable& Variable::default_instance() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariable();
  return *internal_default_instance();
}

Variable* Variable::New(::google::protobuf::Arena* arena) const {
  Variable* n = new Variable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Variable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.LiteralType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Variable.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Variable)
  return false;
#undef DO_
}

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->type_, output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Variable.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->type_, deterministic, target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Variable.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .flyteidl.core.LiteralType type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Variable)
    MergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_type()) {
    mutable_type()->::flyteidl::core::LiteralType::MergeFrom(from.type());
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable::IsInitialized() const {
  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  using std::swap;
  description_.Swap(&other->description_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

VariableMap_VariablesEntry_DoNotUse::VariableMap_VariablesEntry_DoNotUse() {}
VariableMap_VariablesEntry_DoNotUse::VariableMap_VariablesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void VariableMap_VariablesEntry_DoNotUse::MergeFrom(const VariableMap_VariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata VariableMap_VariablesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[1];
}
void VariableMap_VariablesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void VariableMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableMap::kVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableMap::VariableMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariableMap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.VariableMap)
}
VariableMap::VariableMap(const VariableMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  variables_.MergeFrom(from.variables_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.VariableMap)
}

void VariableMap::SharedCtor() {
  _cached_size_ = 0;
}

VariableMap::~VariableMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.VariableMap)
  SharedDtor();
}

void VariableMap::SharedDtor() {
}

void VariableMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VariableMap::descriptor() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VariableMap& VariableMap::default_instance() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsVariableMap();
  return *internal_default_instance();
}

VariableMap* VariableMap::New(::google::protobuf::Arena* arena) const {
  VariableMap* n = new VariableMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VariableMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variables_.Clear();
  _internal_metadata_.Clear();
}

bool VariableMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.VariableMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .flyteidl.core.Variable> variables = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          VariableMap_VariablesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              VariableMap_VariablesEntry_DoNotUse,
              ::std::string, ::flyteidl::core::Variable,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable > > parser(&variables_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.VariableMap.VariablesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.VariableMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.VariableMap)
  return false;
#undef DO_
}

void VariableMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Variable> variables = 1;
  if (!this->variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.VariableMap.VariablesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_iterator
          it = this->variables().begin();
          it != this->variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<VariableMap_VariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<VariableMap_VariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_iterator
          it = this->variables().begin();
          it != this->variables().end(); ++it) {
        entry.reset(variables_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.VariableMap)
}

::google::protobuf::uint8* VariableMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.VariableMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Variable> variables = 1;
  if (!this->variables().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.VariableMap.VariablesEntry.key");
      }
    };

    if (deterministic &&
        this->variables().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variables().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_iterator
          it = this->variables().begin();
          it != this->variables().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<VariableMap_VariablesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variables_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<VariableMap_VariablesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_iterator
          it = this->variables().begin();
          it != this->variables().end(); ++it) {
        entry.reset(variables_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.VariableMap)
  return target;
}

size_t VariableMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.VariableMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flyteidl.core.Variable> variables = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->variables_size());
  {
    ::google::protobuf::scoped_ptr<VariableMap_VariablesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Variable >::const_iterator
        it = this->variables().begin();
        it != this->variables().end(); ++it) {
      entry.reset(variables_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VariableMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.VariableMap)
  GOOGLE_DCHECK_NE(&from, this);
  const VariableMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VariableMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.VariableMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.VariableMap)
    MergeFrom(*source);
  }
}

void VariableMap::MergeFrom(const VariableMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.VariableMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variables_.MergeFrom(from.variables_);
}

void VariableMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.VariableMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableMap::CopyFrom(const VariableMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.VariableMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariableMap::IsInitialized() const {
  return true;
}

void VariableMap::Swap(VariableMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariableMap::InternalSwap(VariableMap* other) {
  using std::swap;
  variables_.Swap(&other->variables_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VariableMap::GetMetadata() const {
  protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TypedInterface::InitAsDefaultInstance() {
  ::flyteidl::core::_TypedInterface_default_instance_._instance.get_mutable()->inputs_ = const_cast< ::flyteidl::core::VariableMap*>(
      ::flyteidl::core::VariableMap::internal_default_instance());
  ::flyteidl::core::_TypedInterface_default_instance_._instance.get_mutable()->outputs_ = const_cast< ::flyteidl::core::VariableMap*>(
      ::flyteidl::core::VariableMap::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedInterface::kInputsFieldNumber;
const int TypedInterface::kOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedInterface::TypedInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsTypedInterface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.TypedInterface)
}
TypedInterface::TypedInterface(const TypedInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_inputs()) {
    inputs_ = new ::flyteidl::core::VariableMap(*from.inputs_);
  } else {
    inputs_ = NULL;
  }
  if (from.has_outputs()) {
    outputs_ = new ::flyteidl::core::VariableMap(*from.outputs_);
  } else {
    outputs_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.TypedInterface)
}

void TypedInterface::SharedCtor() {
  ::memset(&inputs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&outputs_) -
      reinterpret_cast<char*>(&inputs_)) + sizeof(outputs_));
  _cached_size_ = 0;
}

TypedInterface::~TypedInterface() {
  // @@protoc_insertion_point(destructor:flyteidl.core.TypedInterface)
  SharedDtor();
}

void TypedInterface::SharedDtor() {
  if (this != internal_default_instance()) delete inputs_;
  if (this != internal_default_instance()) delete outputs_;
}

void TypedInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypedInterface::descriptor() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypedInterface& TypedInterface::default_instance() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsTypedInterface();
  return *internal_default_instance();
}

TypedInterface* TypedInterface::New(::google::protobuf::Arena* arena) const {
  TypedInterface* n = new TypedInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypedInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && inputs_ != NULL) {
    delete inputs_;
  }
  inputs_ = NULL;
  if (GetArenaNoVirtual() == NULL && outputs_ != NULL) {
    delete outputs_;
  }
  outputs_ = NULL;
  _internal_metadata_.Clear();
}

bool TypedInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.TypedInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.VariableMap inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.VariableMap outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.TypedInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.TypedInterface)
  return false;
#undef DO_
}

void TypedInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->inputs_, output);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->outputs_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.TypedInterface)
}

::google::protobuf::uint8* TypedInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.TypedInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->inputs_, deterministic, target);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->outputs_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.TypedInterface)
  return target;
}

size_t TypedInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.TypedInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.VariableMap inputs = 1;
  if (this->has_inputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inputs_);
  }

  // .flyteidl.core.VariableMap outputs = 2;
  if (this->has_outputs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->outputs_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypedInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.TypedInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypedInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.TypedInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.TypedInterface)
    MergeFrom(*source);
  }
}

void TypedInterface::MergeFrom(const TypedInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.TypedInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_inputs()) {
    mutable_inputs()->::flyteidl::core::VariableMap::MergeFrom(from.inputs());
  }
  if (from.has_outputs()) {
    mutable_outputs()->::flyteidl::core::VariableMap::MergeFrom(from.outputs());
  }
}

void TypedInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.TypedInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedInterface::CopyFrom(const TypedInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.TypedInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedInterface::IsInitialized() const {
  return true;
}

void TypedInterface::Swap(TypedInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedInterface::InternalSwap(TypedInterface* other) {
  using std::swap;
  swap(inputs_, other->inputs_);
  swap(outputs_, other->outputs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypedInterface::GetMetadata() const {
  protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Parameter::InitAsDefaultInstance() {
  ::flyteidl::core::_Parameter_default_instance_._instance.get_mutable()->var_ = const_cast< ::flyteidl::core::Variable*>(
      ::flyteidl::core::Variable::internal_default_instance());
  ::flyteidl::core::_Parameter_default_instance_.default__ = const_cast< ::flyteidl::core::Literal*>(
      ::flyteidl::core::Literal::internal_default_instance());
  ::flyteidl::core::_Parameter_default_instance_.required_ = false;
}
void Parameter::set_allocated_default_(::flyteidl::core::Literal* default_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_behavior();
  if (default_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_, submessage_arena);
    }
    set_has_default_();
    behavior_.default__ = default_;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Parameter.default)
}
void Parameter::clear_default_() {
  if (has_default_()) {
    delete behavior_.default__;
    clear_has_behavior();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kVarFieldNumber;
const int Parameter::kDefaultFieldNumber;
const int Parameter::kRequiredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_var()) {
    var_ = new ::flyteidl::core::Variable(*from.var_);
  } else {
    var_ = NULL;
  }
  clear_has_behavior();
  switch (from.behavior_case()) {
    case kDefault: {
      mutable_default_()->::flyteidl::core::Literal::MergeFrom(from.default_());
      break;
    }
    case kRequired: {
      set_required(from.required());
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Parameter)
}

void Parameter::SharedCtor() {
  var_ = NULL;
  clear_has_behavior();
  _cached_size_ = 0;
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  if (this != internal_default_instance()) delete var_;
  if (has_behavior()) {
    clear_behavior();
  }
}

void Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parameter::descriptor() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Parameter& Parameter::default_instance() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameter();
  return *internal_default_instance();
}

Parameter* Parameter::New(::google::protobuf::Arena* arena) const {
  Parameter* n = new Parameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Parameter::clear_behavior() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Parameter)
  switch (behavior_case()) {
    case kDefault: {
      delete behavior_.default__;
      break;
    }
    case kRequired: {
      // No need to clear
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BEHAVIOR_NOT_SET;
}


void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && var_ != NULL) {
    delete var_;
  }
  var_ = NULL;
  clear_behavior();
  _internal_metadata_.Clear();
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Parameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Variable var = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Literal default = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool required = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_behavior();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &behavior_.required_)));
          set_has_required();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->var_, output);
  }

  // .flyteidl.core.Literal default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *behavior_.default__, output);
  }

  // bool required = 3;
  if (has_required()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->required(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->var_, deterministic, target);
  }

  // .flyteidl.core.Literal default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *behavior_.default__, deterministic, target);
  }

  // bool required = 3;
  if (has_required()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->required(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.Variable var = 1;
  if (this->has_var()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->var_);
  }

  switch (behavior_case()) {
    // .flyteidl.core.Literal default = 2;
    case kDefault: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *behavior_.default__);
      break;
    }
    // bool required = 3;
    case kRequired: {
      total_size += 1 + 1;
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Parameter)
    MergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_var()) {
    mutable_var()->::flyteidl::core::Variable::MergeFrom(from.var());
  }
  switch (from.behavior_case()) {
    case kDefault: {
      mutable_default_()->::flyteidl::core::Literal::MergeFrom(from.default_());
      break;
    }
    case kRequired: {
      set_required(from.required());
      break;
    }
    case BEHAVIOR_NOT_SET: {
      break;
    }
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  swap(var_, other->var_);
  swap(behavior_, other->behavior_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ParameterMap_ParametersEntry_DoNotUse::ParameterMap_ParametersEntry_DoNotUse() {}
ParameterMap_ParametersEntry_DoNotUse::ParameterMap_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ParameterMap_ParametersEntry_DoNotUse::MergeFrom(const ParameterMap_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ParameterMap_ParametersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[5];
}
void ParameterMap_ParametersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ParameterMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterMap::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterMap::ParameterMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameterMap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ParameterMap)
}
ParameterMap::ParameterMap(const ParameterMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ParameterMap)
}

void ParameterMap::SharedCtor() {
  _cached_size_ = 0;
}

ParameterMap::~ParameterMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ParameterMap)
  SharedDtor();
}

void ParameterMap::SharedDtor() {
}

void ParameterMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParameterMap::descriptor() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParameterMap& ParameterMap::default_instance() {
  ::protobuf_flyteidl_2fcore_2finterface_2eproto::InitDefaultsParameterMap();
  return *internal_default_instance();
}

ParameterMap* ParameterMap::New(::google::protobuf::Arena* arena) const {
  ParameterMap* n = new ParameterMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParameterMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  _internal_metadata_.Clear();
}

bool ParameterMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ParameterMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .flyteidl.core.Parameter> parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ParameterMap_ParametersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ParameterMap_ParametersEntry_DoNotUse,
              ::std::string, ::flyteidl::core::Parameter,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ParameterMap.ParametersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ParameterMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ParameterMap)
  return false;
#undef DO_
}

void ParameterMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Parameter> parameters = 1;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.ParameterMap.ParametersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->parameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ParameterMap_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ParameterMap_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ParameterMap)
}

::google::protobuf::uint8* ParameterMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ParameterMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Parameter> parameters = 1;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.ParameterMap.ParametersEntry.key");
      }
    };

    if (deterministic &&
        this->parameters().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ParameterMap_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ParameterMap_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ParameterMap)
  return target;
}

size_t ParameterMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ParameterMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flyteidl.core.Parameter> parameters = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  {
    ::google::protobuf::scoped_ptr<ParameterMap_ParametersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Parameter >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ParameterMap)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ParameterMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ParameterMap)
    MergeFrom(*source);
  }
}

void ParameterMap::MergeFrom(const ParameterMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ParameterMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
}

void ParameterMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ParameterMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterMap::CopyFrom(const ParameterMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ParameterMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterMap::IsInitialized() const {
  return true;
}

void ParameterMap::Swap(ParameterMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterMap::InternalSwap(ParameterMap* other) {
  using std::swap;
  parameters_.Swap(&other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParameterMap::GetMetadata() const {
  protobuf_flyteidl_2fcore_2finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
