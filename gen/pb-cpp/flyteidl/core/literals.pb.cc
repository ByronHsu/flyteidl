// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/literals.proto

#include "flyteidl/core/literals.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace flyteidl {
namespace core {
class PrimitiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Primitive>
      _instance;
  ::google::protobuf::int64 integer_;
  double float_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  bool boolean_;
  const ::google::protobuf::Timestamp* datetime_;
  const ::google::protobuf::Duration* duration_;
} _Primitive_default_instance_;
class VoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Void>
      _instance;
} _Void_default_instance_;
class BlobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Blob>
      _instance;
} _Blob_default_instance_;
class BlobMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlobMetadata>
      _instance;
} _BlobMetadata_default_instance_;
class BinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Binary>
      _instance;
} _Binary_default_instance_;
class SchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Schema>
      _instance;
} _Schema_default_instance_;
class ScalarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Scalar>
      _instance;
  const ::flyteidl::core::Primitive* primitive_;
  const ::flyteidl::core::Blob* blob_;
  const ::flyteidl::core::Binary* binary_;
  const ::flyteidl::core::Schema* schema_;
  const ::flyteidl::core::Void* none_type_;
  const ::flyteidl::core::Error* error_;
  const ::google::protobuf::Struct* generic_;
} _Scalar_default_instance_;
class LiteralDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Literal>
      _instance;
  const ::flyteidl::core::Scalar* scalar_;
  const ::flyteidl::core::LiteralCollection* collection_;
  const ::flyteidl::core::LiteralMap* map_;
} _Literal_default_instance_;
class LiteralCollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiteralCollection>
      _instance;
} _LiteralCollection_default_instance_;
class LiteralMap_LiteralsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiteralMap_LiteralsEntry_DoNotUse>
      _instance;
} _LiteralMap_LiteralsEntry_DoNotUse_default_instance_;
class LiteralMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LiteralMap>
      _instance;
} _LiteralMap_default_instance_;
class BindingDataCollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingDataCollection>
      _instance;
} _BindingDataCollection_default_instance_;
class BindingDataMap_BindingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingDataMap_BindingsEntry_DoNotUse>
      _instance;
} _BindingDataMap_BindingsEntry_DoNotUse_default_instance_;
class BindingDataMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingDataMap>
      _instance;
} _BindingDataMap_default_instance_;
class BindingDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BindingData>
      _instance;
  const ::flyteidl::core::Scalar* scalar_;
  const ::flyteidl::core::BindingDataCollection* collection_;
  const ::flyteidl::core::OutputReference* promise_;
  const ::flyteidl::core::BindingDataMap* map_;
} _BindingData_default_instance_;
class BindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Binding>
      _instance;
} _Binding_default_instance_;
class KeyValuePairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValuePair>
      _instance;
} _KeyValuePair_default_instance_;
class RetryStrategyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RetryStrategy>
      _instance;
} _RetryStrategy_default_instance_;
}  // namespace core
}  // namespace flyteidl
namespace protobuf_flyteidl_2fcore_2fliterals_2eproto {
void InitDefaultsPrimitiveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::flyteidl::core::_Primitive_default_instance_;
    new (ptr) ::flyteidl::core::Primitive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Primitive::InitAsDefaultInstance();
}

void InitDefaultsPrimitive() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPrimitiveImpl);
}

void InitDefaultsVoidImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_Void_default_instance_;
    new (ptr) ::flyteidl::core::Void();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Void::InitAsDefaultInstance();
}

void InitDefaultsVoid() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoidImpl);
}

void InitDefaultsBlobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlobMetadata();
  {
    void* ptr = &::flyteidl::core::_Blob_default_instance_;
    new (ptr) ::flyteidl::core::Blob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Blob::InitAsDefaultInstance();
}

void InitDefaultsBlob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlobImpl);
}

void InitDefaultsBlobMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftypes_2eproto::InitDefaultsBlobType();
  {
    void* ptr = &::flyteidl::core::_BlobMetadata_default_instance_;
    new (ptr) ::flyteidl::core::BlobMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::BlobMetadata::InitAsDefaultInstance();
}

void InitDefaultsBlobMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlobMetadataImpl);
}

void InitDefaultsBinaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_Binary_default_instance_;
    new (ptr) ::flyteidl::core::Binary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Binary::InitAsDefaultInstance();
}

void InitDefaultsBinary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBinaryImpl);
}

void InitDefaultsSchemaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2ftypes_2eproto::InitDefaultsSchemaType();
  {
    void* ptr = &::flyteidl::core::_Schema_default_instance_;
    new (ptr) ::flyteidl::core::Schema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Schema::InitAsDefaultInstance();
}

void InitDefaultsSchema() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSchemaImpl);
}

void InitDefaultsScalarImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsPrimitive();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlob();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinary();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsSchema();
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsVoid();
  protobuf_flyteidl_2fcore_2ftypes_2eproto::InitDefaultsError();
  protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaultsListValue();
  {
    void* ptr = &::flyteidl::core::_Scalar_default_instance_;
    new (ptr) ::flyteidl::core::Scalar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Scalar::InitAsDefaultInstance();
}

void InitDefaultsScalar() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScalarImpl);
}

void InitDefaultsLiteralImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsScalar();
  {
    void* ptr = &::flyteidl::core::_Literal_default_instance_;
    new (ptr) ::flyteidl::core::Literal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::flyteidl::core::_LiteralCollection_default_instance_;
    new (ptr) ::flyteidl::core::LiteralCollection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::flyteidl::core::_LiteralMap_LiteralsEntry_DoNotUse_default_instance_;
    new (ptr) ::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse();
  }
  {
    void* ptr = &::flyteidl::core::_LiteralMap_default_instance_;
    new (ptr) ::flyteidl::core::LiteralMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Literal::InitAsDefaultInstance();
  ::flyteidl::core::LiteralCollection::InitAsDefaultInstance();
  ::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse::InitAsDefaultInstance();
  ::flyteidl::core::LiteralMap::InitAsDefaultInstance();
}

void InitDefaultsLiteral() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLiteralImpl);
}

void InitDefaultsBindingDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsScalar();
  protobuf_flyteidl_2fcore_2ftypes_2eproto::InitDefaultsOutputReference();
  {
    void* ptr = &::flyteidl::core::_BindingDataCollection_default_instance_;
    new (ptr) ::flyteidl::core::BindingDataCollection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::flyteidl::core::_BindingDataMap_BindingsEntry_DoNotUse_default_instance_;
    new (ptr) ::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse();
  }
  {
    void* ptr = &::flyteidl::core::_BindingDataMap_default_instance_;
    new (ptr) ::flyteidl::core::BindingDataMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::flyteidl::core::_BindingData_default_instance_;
    new (ptr) ::flyteidl::core::BindingData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::BindingDataCollection::InitAsDefaultInstance();
  ::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse::InitAsDefaultInstance();
  ::flyteidl::core::BindingDataMap::InitAsDefaultInstance();
  ::flyteidl::core::BindingData::InitAsDefaultInstance();
}

void InitDefaultsBindingData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBindingDataImpl);
}

void InitDefaultsBindingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  {
    void* ptr = &::flyteidl::core::_Binding_default_instance_;
    new (ptr) ::flyteidl::core::Binding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::Binding::InitAsDefaultInstance();
}

void InitDefaultsBinding() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBindingImpl);
}

void InitDefaultsKeyValuePairImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_KeyValuePair_default_instance_;
    new (ptr) ::flyteidl::core::KeyValuePair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::KeyValuePair::InitAsDefaultInstance();
}

void InitDefaultsKeyValuePair() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyValuePairImpl);
}

void InitDefaultsRetryStrategyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::flyteidl::core::_RetryStrategy_default_instance_;
    new (ptr) ::flyteidl::core::RetryStrategy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::RetryStrategy::InitAsDefaultInstance();
}

void InitDefaultsRetryStrategy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRetryStrategyImpl);
}

::google::protobuf::Metadata file_level_metadata[18];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Primitive, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Primitive, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, integer_),
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, float_value_),
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, string_value_),
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, boolean_),
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, datetime_),
  offsetof(::flyteidl::core::PrimitiveDefaultTypeInternal, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Primitive, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Blob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Blob, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Blob, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BlobMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BlobMetadata, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binary, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binary, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Schema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Schema, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Schema, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Scalar, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, primitive_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, blob_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, binary_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, schema_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, none_type_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, error_),
  offsetof(::flyteidl::core::ScalarDefaultTypeInternal, generic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Scalar, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Literal, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Literal, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::core::LiteralDefaultTypeInternal, scalar_),
  offsetof(::flyteidl::core::LiteralDefaultTypeInternal, collection_),
  offsetof(::flyteidl::core::LiteralDefaultTypeInternal, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Literal, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralCollection, literals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::LiteralMap, literals_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataCollection, bindings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingDataMap, bindings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingData, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flyteidl::core::BindingDataDefaultTypeInternal, scalar_),
  offsetof(::flyteidl::core::BindingDataDefaultTypeInternal, collection_),
  offsetof(::flyteidl::core::BindingDataDefaultTypeInternal, promise_),
  offsetof(::flyteidl::core::BindingDataDefaultTypeInternal, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::BindingData, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binding, var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::Binding, binding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::KeyValuePair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::KeyValuePair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::KeyValuePair, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RetryStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flyteidl::core::RetryStrategy, retries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::Primitive)},
  { 12, -1, sizeof(::flyteidl::core::Void)},
  { 17, -1, sizeof(::flyteidl::core::Blob)},
  { 24, -1, sizeof(::flyteidl::core::BlobMetadata)},
  { 30, -1, sizeof(::flyteidl::core::Binary)},
  { 37, -1, sizeof(::flyteidl::core::Schema)},
  { 44, -1, sizeof(::flyteidl::core::Scalar)},
  { 57, -1, sizeof(::flyteidl::core::Literal)},
  { 66, -1, sizeof(::flyteidl::core::LiteralCollection)},
  { 72, 79, sizeof(::flyteidl::core::LiteralMap_LiteralsEntry_DoNotUse)},
  { 81, -1, sizeof(::flyteidl::core::LiteralMap)},
  { 87, -1, sizeof(::flyteidl::core::BindingDataCollection)},
  { 93, 100, sizeof(::flyteidl::core::BindingDataMap_BindingsEntry_DoNotUse)},
  { 102, -1, sizeof(::flyteidl::core::BindingDataMap)},
  { 108, -1, sizeof(::flyteidl::core::BindingData)},
  { 118, -1, sizeof(::flyteidl::core::Binding)},
  { 125, -1, sizeof(::flyteidl::core::KeyValuePair)},
  { 132, -1, sizeof(::flyteidl::core::RetryStrategy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Primitive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Void_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Blob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_BlobMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Binary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Schema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Scalar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Literal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_LiteralCollection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_LiteralMap_LiteralsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_LiteralMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_BindingDataCollection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_BindingDataMap_BindingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_BindingDataMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_BindingData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_Binding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_KeyValuePair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_RetryStrategy_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "flyteidl/core/literals.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034flyteidl/core/literals.proto\022\rflyteidl"
      ".core\032\037google/protobuf/timestamp.proto\032\036"
      "google/protobuf/duration.proto\032\034google/p"
      "rotobuf/struct.proto\032\031flyteidl/core/type"
      "s.proto\"\310\001\n\tPrimitive\022\021\n\007integer\030\001 \001(\003H\000"
      "\022\025\n\013float_value\030\002 \001(\001H\000\022\026\n\014string_value\030"
      "\003 \001(\tH\000\022\021\n\007boolean\030\004 \001(\010H\000\022.\n\010datetime\030\005"
      " \001(\0132\032.google.protobuf.TimestampH\000\022-\n\010du"
      "ration\030\006 \001(\0132\031.google.protobuf.DurationH"
      "\000B\007\n\005value\"\006\n\004Void\"B\n\004Blob\022-\n\010metadata\030\001"
      " \001(\0132\033.flyteidl.core.BlobMetadata\022\013\n\003uri"
      "\030\003 \001(\t\"5\n\014BlobMetadata\022%\n\004type\030\001 \001(\0132\027.f"
      "lyteidl.core.BlobType\"$\n\006Binary\022\r\n\005value"
      "\030\001 \001(\014\022\013\n\003tag\030\002 \001(\t\">\n\006Schema\022\013\n\003uri\030\001 \001"
      "(\t\022\'\n\004type\030\003 \001(\0132\031.flyteidl.core.SchemaT"
      "ype\"\264\002\n\006Scalar\022-\n\tprimitive\030\001 \001(\0132\030.flyt"
      "eidl.core.PrimitiveH\000\022#\n\004blob\030\002 \001(\0132\023.fl"
      "yteidl.core.BlobH\000\022\'\n\006binary\030\003 \001(\0132\025.fly"
      "teidl.core.BinaryH\000\022\'\n\006schema\030\004 \001(\0132\025.fl"
      "yteidl.core.SchemaH\000\022(\n\tnone_type\030\005 \001(\0132"
      "\023.flyteidl.core.VoidH\000\022%\n\005error\030\006 \001(\0132\024."
      "flyteidl.core.ErrorH\000\022*\n\007generic\030\007 \001(\0132\027"
      ".google.protobuf.StructH\000B\007\n\005value\"\235\001\n\007L"
      "iteral\022\'\n\006scalar\030\001 \001(\0132\025.flyteidl.core.S"
      "calarH\000\0226\n\ncollection\030\002 \001(\0132 .flyteidl.c"
      "ore.LiteralCollectionH\000\022(\n\003map\030\003 \001(\0132\031.f"
      "lyteidl.core.LiteralMapH\000B\007\n\005value\"=\n\021Li"
      "teralCollection\022(\n\010literals\030\001 \003(\0132\026.flyt"
      "eidl.core.Literal\"\220\001\n\nLiteralMap\0229\n\010lite"
      "rals\030\001 \003(\0132\'.flyteidl.core.LiteralMap.Li"
      "teralsEntry\032G\n\rLiteralsEntry\022\013\n\003key\030\001 \001("
      "\t\022%\n\005value\030\002 \001(\0132\026.flyteidl.core.Literal"
      ":\0028\001\"E\n\025BindingDataCollection\022,\n\010binding"
      "s\030\001 \003(\0132\032.flyteidl.core.BindingData\"\234\001\n\016"
      "BindingDataMap\022=\n\010bindings\030\001 \003(\0132+.flyte"
      "idl.core.BindingDataMap.BindingsEntry\032K\n"
      "\rBindingsEntry\022\013\n\003key\030\001 \001(\t\022)\n\005value\030\002 \001"
      "(\0132\032.flyteidl.core.BindingData:\0028\001\"\334\001\n\013B"
      "indingData\022\'\n\006scalar\030\001 \001(\0132\025.flyteidl.co"
      "re.ScalarH\000\022:\n\ncollection\030\002 \001(\0132$.flytei"
      "dl.core.BindingDataCollectionH\000\0221\n\007promi"
      "se\030\003 \001(\0132\036.flyteidl.core.OutputReference"
      "H\000\022,\n\003map\030\004 \001(\0132\035.flyteidl.core.BindingD"
      "ataMapH\000B\007\n\005value\"C\n\007Binding\022\013\n\003var\030\001 \001("
      "\t\022+\n\007binding\030\002 \001(\0132\032.flyteidl.core.Bindi"
      "ngData\"*\n\014KeyValuePair\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
      "alue\030\002 \001(\t\" \n\rRetryStrategy\022\017\n\007retries\030\005"
      " \001(\rB2Z0github.com/lyft/flyteidl/gen/pb-"
      "go/flyteidl/coreb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1944);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "flyteidl/core/literals.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_flyteidl_2fcore_2ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_flyteidl_2fcore_2fliterals_2eproto
namespace flyteidl {
namespace core {

// ===================================================================

void Primitive::InitAsDefaultInstance() {
  ::flyteidl::core::_Primitive_default_instance_.integer_ = GOOGLE_LONGLONG(0);
  ::flyteidl::core::_Primitive_default_instance_.float_value_ = 0;
  ::flyteidl::core::_Primitive_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::flyteidl::core::_Primitive_default_instance_.boolean_ = false;
  ::flyteidl::core::_Primitive_default_instance_.datetime_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::flyteidl::core::_Primitive_default_instance_.duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void Primitive::set_allocated_datetime(::google::protobuf::Timestamp* datetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (datetime) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(datetime)->GetArena();
    if (message_arena != submessage_arena) {
      datetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datetime, submessage_arena);
    }
    set_has_datetime();
    value_.datetime_ = datetime;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Primitive.datetime)
}
void Primitive::clear_datetime() {
  if (has_datetime()) {
    delete value_.datetime_;
    clear_has_value();
  }
}
void Primitive::set_allocated_duration(::google::protobuf::Duration* duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(duration)->GetArena();
    if (message_arena != submessage_arena) {
      duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration, submessage_arena);
    }
    set_has_duration();
    value_.duration_ = duration;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Primitive.duration)
}
void Primitive::clear_duration() {
  if (has_duration()) {
    delete value_.duration_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Primitive::kIntegerFieldNumber;
const int Primitive::kFloatValueFieldNumber;
const int Primitive::kStringValueFieldNumber;
const int Primitive::kBooleanFieldNumber;
const int Primitive::kDatetimeFieldNumber;
const int Primitive::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Primitive::Primitive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsPrimitive();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Primitive)
}
Primitive::Primitive(const Primitive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kDatetime: {
      mutable_datetime()->::google::protobuf::Timestamp::MergeFrom(from.datetime());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Primitive)
}

void Primitive::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

Primitive::~Primitive() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Primitive)
  SharedDtor();
}

void Primitive::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Primitive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Primitive::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Primitive& Primitive::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsPrimitive();
  return *internal_default_instance();
}

Primitive* Primitive::New(::google::protobuf::Arena* arena) const {
  Primitive* n = new Primitive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Primitive::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Primitive)
  switch (value_case()) {
    case kInteger: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kDatetime: {
      delete value_.datetime_;
      break;
    }
    case kDuration: {
      delete value_.duration_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Primitive::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Primitive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Primitive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Primitive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 integer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.integer_)));
          set_has_integer();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double float_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Primitive.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolean = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp datetime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_datetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Primitive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Primitive)
  return false;
#undef DO_
}

void Primitive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Primitive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 integer = 1;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->integer(), output);
  }

  // double float_value = 2;
  if (has_float_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->float_value(), output);
  }

  // string string_value = 3;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Primitive.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->string_value(), output);
  }

  // bool boolean = 4;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->boolean(), output);
  }

  // .google.protobuf.Timestamp datetime = 5;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_.datetime_, output);
  }

  // .google.protobuf.Duration duration = 6;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *value_.duration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Primitive)
}

::google::protobuf::uint8* Primitive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Primitive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 integer = 1;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->integer(), target);
  }

  // double float_value = 2;
  if (has_float_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->float_value(), target);
  }

  // string string_value = 3;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Primitive.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->string_value(), target);
  }

  // bool boolean = 4;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->boolean(), target);
  }

  // .google.protobuf.Timestamp datetime = 5;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *value_.datetime_, deterministic, target);
  }

  // .google.protobuf.Duration duration = 6;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *value_.duration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Primitive)
  return target;
}

size_t Primitive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Primitive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // int64 integer = 1;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->integer());
      break;
    }
    // double float_value = 2;
    case kFloatValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 3;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // bool boolean = 4;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // .google.protobuf.Timestamp datetime = 5;
    case kDatetime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.datetime_);
      break;
    }
    // .google.protobuf.Duration duration = 6;
    case kDuration: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.duration_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Primitive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Primitive)
  GOOGLE_DCHECK_NE(&from, this);
  const Primitive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Primitive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Primitive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Primitive)
    MergeFrom(*source);
  }
}

void Primitive::MergeFrom(const Primitive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Primitive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kDatetime: {
      mutable_datetime()->::google::protobuf::Timestamp::MergeFrom(from.datetime());
      break;
    }
    case kDuration: {
      mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Primitive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Primitive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Primitive::CopyFrom(const Primitive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Primitive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Primitive::IsInitialized() const {
  return true;
}

void Primitive::Swap(Primitive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Primitive::InternalSwap(Primitive* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Primitive::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Void::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Void::Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsVoid();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Void)
}
Void::Void(const Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Void)
}

void Void::SharedCtor() {
  _cached_size_ = 0;
}

Void::~Void() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Void)
  SharedDtor();
}

void Void::SharedDtor() {
}

void Void::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Void::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Void& Void::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsVoid();
  return *internal_default_instance();
}

Void* Void::New(::google::protobuf::Arena* arena) const {
  Void* n = new Void;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Void::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Void)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Void)
  return false;
#undef DO_
}

void Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Void)
}

::google::protobuf::uint8* Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Void)
  return target;
}

size_t Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Void)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Void)
    MergeFrom(*source);
  }
}

void Void::MergeFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Void::CopyFrom(const Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Void::IsInitialized() const {
  return true;
}

void Void::Swap(Void* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Void::InternalSwap(Void* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Void::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Blob::InitAsDefaultInstance() {
  ::flyteidl::core::_Blob_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::flyteidl::core::BlobMetadata*>(
      ::flyteidl::core::BlobMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Blob::kMetadataFieldNumber;
const int Blob::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Blob::Blob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Blob)
}
Blob::Blob(const Blob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::flyteidl::core::BlobMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Blob)
}

void Blob::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
  _cached_size_ = 0;
}

Blob::~Blob() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Blob)
  SharedDtor();
}

void Blob::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void Blob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Blob::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Blob& Blob::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlob();
  return *internal_default_instance();
}

Blob* Blob::New(::google::protobuf::Arena* arena) const {
  Blob* n = new Blob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Blob::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Blob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool Blob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Blob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.BlobMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Blob.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Blob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Blob)
  return false;
#undef DO_
}

void Blob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Blob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.BlobMetadata metadata = 1;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->metadata_, output);
  }

  // string uri = 3;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Blob.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Blob)
}

::google::protobuf::uint8* Blob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Blob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.BlobMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->metadata_, deterministic, target);
  }

  // string uri = 3;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Blob.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Blob)
  return target;
}

size_t Blob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Blob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 3;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // .flyteidl.core.BlobMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Blob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Blob)
  GOOGLE_DCHECK_NE(&from, this);
  const Blob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Blob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Blob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Blob)
    MergeFrom(*source);
  }
}

void Blob::MergeFrom(const Blob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Blob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::flyteidl::core::BlobMetadata::MergeFrom(from.metadata());
  }
}

void Blob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Blob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Blob::CopyFrom(const Blob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Blob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Blob::IsInitialized() const {
  return true;
}

void Blob::Swap(Blob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Blob::InternalSwap(Blob* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Blob::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlobMetadata::InitAsDefaultInstance() {
  ::flyteidl::core::_BlobMetadata_default_instance_._instance.get_mutable()->type_ = const_cast< ::flyteidl::core::BlobType*>(
      ::flyteidl::core::BlobType::internal_default_instance());
}
void BlobMetadata::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlobMetadata::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlobMetadata::BlobMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlobMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.BlobMetadata)
}
BlobMetadata::BlobMetadata(const BlobMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::flyteidl::core::BlobType(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.BlobMetadata)
}

void BlobMetadata::SharedCtor() {
  type_ = NULL;
  _cached_size_ = 0;
}

BlobMetadata::~BlobMetadata() {
  // @@protoc_insertion_point(destructor:flyteidl.core.BlobMetadata)
  SharedDtor();
}

void BlobMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
}

void BlobMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlobMetadata::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlobMetadata& BlobMetadata::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBlobMetadata();
  return *internal_default_instance();
}

BlobMetadata* BlobMetadata::New(::google::protobuf::Arena* arena) const {
  BlobMetadata* n = new BlobMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlobMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.BlobMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool BlobMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.BlobMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.BlobType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.BlobMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.BlobMetadata)
  return false;
#undef DO_
}

void BlobMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.BlobMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.BlobType type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->type_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.BlobMetadata)
}

::google::protobuf::uint8* BlobMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.BlobMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.BlobType type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->type_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.BlobMetadata)
  return target;
}

size_t BlobMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.BlobMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flyteidl.core.BlobType type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlobMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.BlobMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const BlobMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlobMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.BlobMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.BlobMetadata)
    MergeFrom(*source);
  }
}

void BlobMetadata::MergeFrom(const BlobMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.BlobMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::flyteidl::core::BlobType::MergeFrom(from.type());
  }
}

void BlobMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.BlobMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlobMetadata::CopyFrom(const BlobMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.BlobMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlobMetadata::IsInitialized() const {
  return true;
}

void BlobMetadata::Swap(BlobMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlobMetadata::InternalSwap(BlobMetadata* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlobMetadata::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Binary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Binary::kValueFieldNumber;
const int Binary::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Binary::Binary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Binary)
}
Binary::Binary(const Binary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Binary)
}

void Binary::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Binary::~Binary() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Binary)
  SharedDtor();
}

void Binary::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Binary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Binary::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Binary& Binary::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinary();
  return *internal_default_instance();
}

Binary* Binary::New(::google::protobuf::Arena* arena) const {
  Binary* n = new Binary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Binary::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Binary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Binary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Binary.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Binary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Binary)
  return false;
#undef DO_
}

void Binary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Binary.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Binary)
}

::google::protobuf::uint8* Binary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // string tag = 2;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Binary.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Binary)
  return target;
}

size_t Binary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Binary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // string tag = 2;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Binary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  const Binary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Binary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Binary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Binary)
    MergeFrom(*source);
  }
}

void Binary::MergeFrom(const Binary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
}

void Binary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Binary::CopyFrom(const Binary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Binary::IsInitialized() const {
  return true;
}

void Binary::Swap(Binary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Binary::InternalSwap(Binary* other) {
  using std::swap;
  value_.Swap(&other->value_);
  tag_.Swap(&other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Binary::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Schema::InitAsDefaultInstance() {
  ::flyteidl::core::_Schema_default_instance_._instance.get_mutable()->type_ = const_cast< ::flyteidl::core::SchemaType*>(
      ::flyteidl::core::SchemaType::internal_default_instance());
}
void Schema::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Schema::kUriFieldNumber;
const int Schema::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Schema::Schema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsSchema();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Schema)
}
Schema::Schema(const Schema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_type()) {
    type_ = new ::flyteidl::core::SchemaType(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Schema)
}

void Schema::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
  _cached_size_ = 0;
}

Schema::~Schema() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Schema)
  SharedDtor();
}

void Schema::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Schema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Schema::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Schema& Schema::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsSchema();
  return *internal_default_instance();
}

Schema* Schema::New(::google::protobuf::Arena* arena) const {
  Schema* n = new Schema;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Schema::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool Schema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Schema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Schema.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.SchemaType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Schema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Schema)
  return false;
#undef DO_
}

void Schema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Schema.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // .flyteidl.core.SchemaType type = 3;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->type_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Schema)
}

::google::protobuf::uint8* Schema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Schema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Schema.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // .flyteidl.core.SchemaType type = 3;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->type_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Schema)
  return target;
}

size_t Schema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Schema)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // .flyteidl.core.SchemaType type = 3;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Schema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  const Schema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Schema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Schema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Schema)
    MergeFrom(*source);
  }
}

void Schema::MergeFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_type()) {
    mutable_type()->::flyteidl::core::SchemaType::MergeFrom(from.type());
  }
}

void Schema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schema::CopyFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schema::IsInitialized() const {
  return true;
}

void Schema::Swap(Schema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Schema::InternalSwap(Schema* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Schema::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Scalar::InitAsDefaultInstance() {
  ::flyteidl::core::_Scalar_default_instance_.primitive_ = const_cast< ::flyteidl::core::Primitive*>(
      ::flyteidl::core::Primitive::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.blob_ = const_cast< ::flyteidl::core::Blob*>(
      ::flyteidl::core::Blob::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.binary_ = const_cast< ::flyteidl::core::Binary*>(
      ::flyteidl::core::Binary::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.schema_ = const_cast< ::flyteidl::core::Schema*>(
      ::flyteidl::core::Schema::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.none_type_ = const_cast< ::flyteidl::core::Void*>(
      ::flyteidl::core::Void::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.error_ = const_cast< ::flyteidl::core::Error*>(
      ::flyteidl::core::Error::internal_default_instance());
  ::flyteidl::core::_Scalar_default_instance_.generic_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
void Scalar::set_allocated_primitive(::flyteidl::core::Primitive* primitive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (primitive) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      primitive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primitive, submessage_arena);
    }
    set_has_primitive();
    value_.primitive_ = primitive;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.primitive)
}
void Scalar::set_allocated_blob(::flyteidl::core::Blob* blob) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (blob) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      blob = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    set_has_blob();
    value_.blob_ = blob;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.blob)
}
void Scalar::set_allocated_binary(::flyteidl::core::Binary* binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binary, submessage_arena);
    }
    set_has_binary();
    value_.binary_ = binary;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.binary)
}
void Scalar::set_allocated_schema(::flyteidl::core::Schema* schema) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (schema) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      schema = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, schema, submessage_arena);
    }
    set_has_schema();
    value_.schema_ = schema;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.schema)
}
void Scalar::set_allocated_none_type(::flyteidl::core::Void* none_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (none_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      none_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, none_type, submessage_arena);
    }
    set_has_none_type();
    value_.none_type_ = none_type;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.none_type)
}
void Scalar::set_allocated_error(::flyteidl::core::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    value_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.error)
}
void Scalar::clear_error() {
  if (has_error()) {
    delete value_.error_;
    clear_has_value();
  }
}
void Scalar::set_allocated_generic(::google::protobuf::Struct* generic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (generic) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(generic)->GetArena();
    if (message_arena != submessage_arena) {
      generic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, generic, submessage_arena);
    }
    set_has_generic();
    value_.generic_ = generic;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Scalar.generic)
}
void Scalar::clear_generic() {
  if (has_generic()) {
    delete value_.generic_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scalar::kPrimitiveFieldNumber;
const int Scalar::kBlobFieldNumber;
const int Scalar::kBinaryFieldNumber;
const int Scalar::kSchemaFieldNumber;
const int Scalar::kNoneTypeFieldNumber;
const int Scalar::kErrorFieldNumber;
const int Scalar::kGenericFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scalar::Scalar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsScalar();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Scalar)
}
Scalar::Scalar(const Scalar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kPrimitive: {
      mutable_primitive()->::flyteidl::core::Primitive::MergeFrom(from.primitive());
      break;
    }
    case kBlob: {
      mutable_blob()->::flyteidl::core::Blob::MergeFrom(from.blob());
      break;
    }
    case kBinary: {
      mutable_binary()->::flyteidl::core::Binary::MergeFrom(from.binary());
      break;
    }
    case kSchema: {
      mutable_schema()->::flyteidl::core::Schema::MergeFrom(from.schema());
      break;
    }
    case kNoneType: {
      mutable_none_type()->::flyteidl::core::Void::MergeFrom(from.none_type());
      break;
    }
    case kError: {
      mutable_error()->::flyteidl::core::Error::MergeFrom(from.error());
      break;
    }
    case kGeneric: {
      mutable_generic()->::google::protobuf::Struct::MergeFrom(from.generic());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Scalar)
}

void Scalar::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

Scalar::~Scalar() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Scalar)
  SharedDtor();
}

void Scalar::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Scalar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Scalar::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Scalar& Scalar::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsScalar();
  return *internal_default_instance();
}

Scalar* Scalar::New(::google::protobuf::Arena* arena) const {
  Scalar* n = new Scalar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Scalar::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Scalar)
  switch (value_case()) {
    case kPrimitive: {
      delete value_.primitive_;
      break;
    }
    case kBlob: {
      delete value_.blob_;
      break;
    }
    case kBinary: {
      delete value_.binary_;
      break;
    }
    case kSchema: {
      delete value_.schema_;
      break;
    }
    case kNoneType: {
      delete value_.none_type_;
      break;
    }
    case kError: {
      delete value_.error_;
      break;
    }
    case kGeneric: {
      delete value_.generic_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Scalar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Scalar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Primitive primitive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primitive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Blob blob = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Binary binary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Schema schema = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Void none_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_none_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.Error error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct generic = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_generic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Scalar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Scalar)
  return false;
#undef DO_
}

void Scalar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Primitive primitive = 1;
  if (has_primitive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *value_.primitive_, output);
  }

  // .flyteidl.core.Blob blob = 2;
  if (has_blob()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *value_.blob_, output);
  }

  // .flyteidl.core.Binary binary = 3;
  if (has_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *value_.binary_, output);
  }

  // .flyteidl.core.Schema schema = 4;
  if (has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *value_.schema_, output);
  }

  // .flyteidl.core.Void none_type = 5;
  if (has_none_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *value_.none_type_, output);
  }

  // .flyteidl.core.Error error = 6;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *value_.error_, output);
  }

  // .google.protobuf.Struct generic = 7;
  if (has_generic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *value_.generic_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Scalar)
}

::google::protobuf::uint8* Scalar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Primitive primitive = 1;
  if (has_primitive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *value_.primitive_, deterministic, target);
  }

  // .flyteidl.core.Blob blob = 2;
  if (has_blob()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *value_.blob_, deterministic, target);
  }

  // .flyteidl.core.Binary binary = 3;
  if (has_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *value_.binary_, deterministic, target);
  }

  // .flyteidl.core.Schema schema = 4;
  if (has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *value_.schema_, deterministic, target);
  }

  // .flyteidl.core.Void none_type = 5;
  if (has_none_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *value_.none_type_, deterministic, target);
  }

  // .flyteidl.core.Error error = 6;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *value_.error_, deterministic, target);
  }

  // .google.protobuf.Struct generic = 7;
  if (has_generic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *value_.generic_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Scalar)
  return target;
}

size_t Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Scalar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .flyteidl.core.Primitive primitive = 1;
    case kPrimitive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.primitive_);
      break;
    }
    // .flyteidl.core.Blob blob = 2;
    case kBlob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.blob_);
      break;
    }
    // .flyteidl.core.Binary binary = 3;
    case kBinary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.binary_);
      break;
    }
    // .flyteidl.core.Schema schema = 4;
    case kSchema: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.schema_);
      break;
    }
    // .flyteidl.core.Void none_type = 5;
    case kNoneType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.none_type_);
      break;
    }
    // .flyteidl.core.Error error = 6;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.error_);
      break;
    }
    // .google.protobuf.Struct generic = 7;
    case kGeneric: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.generic_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Scalar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  const Scalar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Scalar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Scalar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Scalar)
    MergeFrom(*source);
  }
}

void Scalar::MergeFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kPrimitive: {
      mutable_primitive()->::flyteidl::core::Primitive::MergeFrom(from.primitive());
      break;
    }
    case kBlob: {
      mutable_blob()->::flyteidl::core::Blob::MergeFrom(from.blob());
      break;
    }
    case kBinary: {
      mutable_binary()->::flyteidl::core::Binary::MergeFrom(from.binary());
      break;
    }
    case kSchema: {
      mutable_schema()->::flyteidl::core::Schema::MergeFrom(from.schema());
      break;
    }
    case kNoneType: {
      mutable_none_type()->::flyteidl::core::Void::MergeFrom(from.none_type());
      break;
    }
    case kError: {
      mutable_error()->::flyteidl::core::Error::MergeFrom(from.error());
      break;
    }
    case kGeneric: {
      mutable_generic()->::google::protobuf::Struct::MergeFrom(from.generic());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Scalar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scalar::CopyFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scalar::IsInitialized() const {
  return true;
}

void Scalar::Swap(Scalar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scalar::InternalSwap(Scalar* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Scalar::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Literal::InitAsDefaultInstance() {
  ::flyteidl::core::_Literal_default_instance_.scalar_ = const_cast< ::flyteidl::core::Scalar*>(
      ::flyteidl::core::Scalar::internal_default_instance());
  ::flyteidl::core::_Literal_default_instance_.collection_ = const_cast< ::flyteidl::core::LiteralCollection*>(
      ::flyteidl::core::LiteralCollection::internal_default_instance());
  ::flyteidl::core::_Literal_default_instance_.map_ = const_cast< ::flyteidl::core::LiteralMap*>(
      ::flyteidl::core::LiteralMap::internal_default_instance());
}
void Literal::set_allocated_scalar(::flyteidl::core::Scalar* scalar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (scalar) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scalar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    value_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Literal.scalar)
}
void Literal::set_allocated_collection(::flyteidl::core::LiteralCollection* collection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (collection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      collection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, collection, submessage_arena);
    }
    set_has_collection();
    value_.collection_ = collection;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Literal.collection)
}
void Literal::set_allocated_map(::flyteidl::core::LiteralMap* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.Literal.map)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Literal::kScalarFieldNumber;
const int Literal::kCollectionFieldNumber;
const int Literal::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Literal::Literal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Literal)
}
Literal::Literal(const Literal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kScalar: {
      mutable_scalar()->::flyteidl::core::Scalar::MergeFrom(from.scalar());
      break;
    }
    case kCollection: {
      mutable_collection()->::flyteidl::core::LiteralCollection::MergeFrom(from.collection());
      break;
    }
    case kMap: {
      mutable_map()->::flyteidl::core::LiteralMap::MergeFrom(from.map());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Literal)
}

void Literal::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

Literal::~Literal() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Literal)
  SharedDtor();
}

void Literal::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Literal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Literal::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Literal& Literal::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  return *internal_default_instance();
}

Literal* Literal::New(::google::protobuf::Arena* arena) const {
  Literal* n = new Literal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Literal::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.Literal)
  switch (value_case()) {
    case kScalar: {
      delete value_.scalar_;
      break;
    }
    case kCollection: {
      delete value_.collection_;
      break;
    }
    case kMap: {
      delete value_.map_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Literal::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Literal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Literal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Scalar scalar = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scalar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralCollection collection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_collection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.LiteralMap map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Literal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Literal)
  return false;
#undef DO_
}

void Literal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Scalar scalar = 1;
  if (has_scalar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *value_.scalar_, output);
  }

  // .flyteidl.core.LiteralCollection collection = 2;
  if (has_collection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *value_.collection_, output);
  }

  // .flyteidl.core.LiteralMap map = 3;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *value_.map_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Literal)
}

::google::protobuf::uint8* Literal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Scalar scalar = 1;
  if (has_scalar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *value_.scalar_, deterministic, target);
  }

  // .flyteidl.core.LiteralCollection collection = 2;
  if (has_collection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *value_.collection_, deterministic, target);
  }

  // .flyteidl.core.LiteralMap map = 3;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *value_.map_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Literal)
  return target;
}

size_t Literal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Literal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .flyteidl.core.Scalar scalar = 1;
    case kScalar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.scalar_);
      break;
    }
    // .flyteidl.core.LiteralCollection collection = 2;
    case kCollection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.collection_);
      break;
    }
    // .flyteidl.core.LiteralMap map = 3;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.map_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Literal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Literal)
  GOOGLE_DCHECK_NE(&from, this);
  const Literal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Literal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Literal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Literal)
    MergeFrom(*source);
  }
}

void Literal::MergeFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Literal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kScalar: {
      mutable_scalar()->::flyteidl::core::Scalar::MergeFrom(from.scalar());
      break;
    }
    case kCollection: {
      mutable_collection()->::flyteidl::core::LiteralCollection::MergeFrom(from.collection());
      break;
    }
    case kMap: {
      mutable_map()->::flyteidl::core::LiteralMap::MergeFrom(from.map());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Literal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Literal::CopyFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal::IsInitialized() const {
  return true;
}

void Literal::Swap(Literal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Literal::InternalSwap(Literal* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Literal::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LiteralCollection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiteralCollection::kLiteralsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiteralCollection::LiteralCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.LiteralCollection)
}
LiteralCollection::LiteralCollection(const LiteralCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      literals_(from.literals_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.LiteralCollection)
}

void LiteralCollection::SharedCtor() {
  _cached_size_ = 0;
}

LiteralCollection::~LiteralCollection() {
  // @@protoc_insertion_point(destructor:flyteidl.core.LiteralCollection)
  SharedDtor();
}

void LiteralCollection::SharedDtor() {
}

void LiteralCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiteralCollection::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiteralCollection& LiteralCollection::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  return *internal_default_instance();
}

LiteralCollection* LiteralCollection::New(::google::protobuf::Arena* arena) const {
  LiteralCollection* n = new LiteralCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiteralCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.LiteralCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  literals_.Clear();
  _internal_metadata_.Clear();
}

bool LiteralCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.LiteralCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.Literal literals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_literals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.LiteralCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.LiteralCollection)
  return false;
#undef DO_
}

void LiteralCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.LiteralCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Literal literals = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->literals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->literals(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.LiteralCollection)
}

::google::protobuf::uint8* LiteralCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.LiteralCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.Literal literals = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->literals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->literals(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.LiteralCollection)
  return target;
}

size_t LiteralCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.LiteralCollection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.core.Literal literals = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->literals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->literals(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiteralCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.LiteralCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const LiteralCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiteralCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.LiteralCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.LiteralCollection)
    MergeFrom(*source);
  }
}

void LiteralCollection::MergeFrom(const LiteralCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.LiteralCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  literals_.MergeFrom(from.literals_);
}

void LiteralCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.LiteralCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiteralCollection::CopyFrom(const LiteralCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.LiteralCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiteralCollection::IsInitialized() const {
  return true;
}

void LiteralCollection::Swap(LiteralCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiteralCollection::InternalSwap(LiteralCollection* other) {
  using std::swap;
  literals_.InternalSwap(&other->literals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiteralCollection::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

LiteralMap_LiteralsEntry_DoNotUse::LiteralMap_LiteralsEntry_DoNotUse() {}
LiteralMap_LiteralsEntry_DoNotUse::LiteralMap_LiteralsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LiteralMap_LiteralsEntry_DoNotUse::MergeFrom(const LiteralMap_LiteralsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LiteralMap_LiteralsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[9];
}
void LiteralMap_LiteralsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LiteralMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LiteralMap::kLiteralsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LiteralMap::LiteralMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.LiteralMap)
}
LiteralMap::LiteralMap(const LiteralMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  literals_.MergeFrom(from.literals_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.LiteralMap)
}

void LiteralMap::SharedCtor() {
  _cached_size_ = 0;
}

LiteralMap::~LiteralMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.LiteralMap)
  SharedDtor();
}

void LiteralMap::SharedDtor() {
}

void LiteralMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiteralMap::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LiteralMap& LiteralMap::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsLiteral();
  return *internal_default_instance();
}

LiteralMap* LiteralMap::New(::google::protobuf::Arena* arena) const {
  LiteralMap* n = new LiteralMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiteralMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.LiteralMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  literals_.Clear();
  _internal_metadata_.Clear();
}

bool LiteralMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.LiteralMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .flyteidl.core.Literal> literals = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          LiteralMap_LiteralsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LiteralMap_LiteralsEntry_DoNotUse,
              ::std::string, ::flyteidl::core::Literal,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal > > parser(&literals_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.LiteralMap.LiteralsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.LiteralMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.LiteralMap)
  return false;
#undef DO_
}

void LiteralMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.LiteralMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Literal> literals = 1;
  if (!this->literals().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.LiteralMap.LiteralsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->literals().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->literals().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_iterator
          it = this->literals().begin();
          it != this->literals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LiteralMap_LiteralsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(literals_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LiteralMap_LiteralsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_iterator
          it = this->literals().begin();
          it != this->literals().end(); ++it) {
        entry.reset(literals_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.LiteralMap)
}

::google::protobuf::uint8* LiteralMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.LiteralMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.Literal> literals = 1;
  if (!this->literals().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.LiteralMap.LiteralsEntry.key");
      }
    };

    if (deterministic &&
        this->literals().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->literals().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_iterator
          it = this->literals().begin();
          it != this->literals().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LiteralMap_LiteralsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(literals_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LiteralMap_LiteralsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_iterator
          it = this->literals().begin();
          it != this->literals().end(); ++it) {
        entry.reset(literals_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.LiteralMap)
  return target;
}

size_t LiteralMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.LiteralMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flyteidl.core.Literal> literals = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->literals_size());
  {
    ::google::protobuf::scoped_ptr<LiteralMap_LiteralsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flyteidl::core::Literal >::const_iterator
        it = this->literals().begin();
        it != this->literals().end(); ++it) {
      entry.reset(literals_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiteralMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.LiteralMap)
  GOOGLE_DCHECK_NE(&from, this);
  const LiteralMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LiteralMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.LiteralMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.LiteralMap)
    MergeFrom(*source);
  }
}

void LiteralMap::MergeFrom(const LiteralMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.LiteralMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  literals_.MergeFrom(from.literals_);
}

void LiteralMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.LiteralMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiteralMap::CopyFrom(const LiteralMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.LiteralMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiteralMap::IsInitialized() const {
  return true;
}

void LiteralMap::Swap(LiteralMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiteralMap::InternalSwap(LiteralMap* other) {
  using std::swap;
  literals_.Swap(&other->literals_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiteralMap::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BindingDataCollection::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingDataCollection::kBindingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingDataCollection::BindingDataCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.BindingDataCollection)
}
BindingDataCollection::BindingDataCollection(const BindingDataCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bindings_(from.bindings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.BindingDataCollection)
}

void BindingDataCollection::SharedCtor() {
  _cached_size_ = 0;
}

BindingDataCollection::~BindingDataCollection() {
  // @@protoc_insertion_point(destructor:flyteidl.core.BindingDataCollection)
  SharedDtor();
}

void BindingDataCollection::SharedDtor() {
}

void BindingDataCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingDataCollection::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingDataCollection& BindingDataCollection::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  return *internal_default_instance();
}

BindingDataCollection* BindingDataCollection::New(::google::protobuf::Arena* arena) const {
  BindingDataCollection* n = new BindingDataCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingDataCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.BindingDataCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  _internal_metadata_.Clear();
}

bool BindingDataCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.BindingDataCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .flyteidl.core.BindingData bindings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_bindings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.BindingDataCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.BindingDataCollection)
  return false;
#undef DO_
}

void BindingDataCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.BindingDataCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.BindingData bindings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bindings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bindings(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.BindingDataCollection)
}

::google::protobuf::uint8* BindingDataCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.BindingDataCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .flyteidl.core.BindingData bindings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bindings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bindings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.BindingDataCollection)
  return target;
}

size_t BindingDataCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.BindingDataCollection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .flyteidl.core.BindingData bindings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bindings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bindings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingDataCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.BindingDataCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingDataCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingDataCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.BindingDataCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.BindingDataCollection)
    MergeFrom(*source);
  }
}

void BindingDataCollection::MergeFrom(const BindingDataCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.BindingDataCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
}

void BindingDataCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.BindingDataCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingDataCollection::CopyFrom(const BindingDataCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.BindingDataCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingDataCollection::IsInitialized() const {
  return true;
}

void BindingDataCollection::Swap(BindingDataCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingDataCollection::InternalSwap(BindingDataCollection* other) {
  using std::swap;
  bindings_.InternalSwap(&other->bindings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingDataCollection::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

BindingDataMap_BindingsEntry_DoNotUse::BindingDataMap_BindingsEntry_DoNotUse() {}
BindingDataMap_BindingsEntry_DoNotUse::BindingDataMap_BindingsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void BindingDataMap_BindingsEntry_DoNotUse::MergeFrom(const BindingDataMap_BindingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata BindingDataMap_BindingsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[12];
}
void BindingDataMap_BindingsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void BindingDataMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingDataMap::kBindingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingDataMap::BindingDataMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.BindingDataMap)
}
BindingDataMap::BindingDataMap(const BindingDataMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bindings_.MergeFrom(from.bindings_);
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.BindingDataMap)
}

void BindingDataMap::SharedCtor() {
  _cached_size_ = 0;
}

BindingDataMap::~BindingDataMap() {
  // @@protoc_insertion_point(destructor:flyteidl.core.BindingDataMap)
  SharedDtor();
}

void BindingDataMap::SharedDtor() {
}

void BindingDataMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingDataMap::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingDataMap& BindingDataMap::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  return *internal_default_instance();
}

BindingDataMap* BindingDataMap::New(::google::protobuf::Arena* arena) const {
  BindingDataMap* n = new BindingDataMap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingDataMap::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.BindingDataMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  _internal_metadata_.Clear();
}

bool BindingDataMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.BindingDataMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .flyteidl.core.BindingData> bindings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          BindingDataMap_BindingsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              BindingDataMap_BindingsEntry_DoNotUse,
              ::std::string, ::flyteidl::core::BindingData,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData > > parser(&bindings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.BindingDataMap.BindingsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.BindingDataMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.BindingDataMap)
  return false;
#undef DO_
}

void BindingDataMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.BindingDataMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.BindingData> bindings = 1;
  if (!this->bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.BindingDataMap.BindingsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->bindings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BindingDataMap_BindingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bindings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BindingDataMap_BindingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it) {
        entry.reset(bindings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.BindingDataMap)
}

::google::protobuf::uint8* BindingDataMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.BindingDataMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .flyteidl.core.BindingData> bindings = 1;
  if (!this->bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flyteidl.core.BindingDataMap.BindingsEntry.key");
      }
    };

    if (deterministic &&
        this->bindings().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BindingDataMap_BindingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bindings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<BindingDataMap_BindingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it) {
        entry.reset(bindings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.BindingDataMap)
  return target;
}

size_t BindingDataMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.BindingDataMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flyteidl.core.BindingData> bindings = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bindings_size());
  {
    ::google::protobuf::scoped_ptr<BindingDataMap_BindingsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flyteidl::core::BindingData >::const_iterator
        it = this->bindings().begin();
        it != this->bindings().end(); ++it) {
      entry.reset(bindings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingDataMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.BindingDataMap)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingDataMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingDataMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.BindingDataMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.BindingDataMap)
    MergeFrom(*source);
  }
}

void BindingDataMap::MergeFrom(const BindingDataMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.BindingDataMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
}

void BindingDataMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.BindingDataMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingDataMap::CopyFrom(const BindingDataMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.BindingDataMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingDataMap::IsInitialized() const {
  return true;
}

void BindingDataMap::Swap(BindingDataMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingDataMap::InternalSwap(BindingDataMap* other) {
  using std::swap;
  bindings_.Swap(&other->bindings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingDataMap::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BindingData::InitAsDefaultInstance() {
  ::flyteidl::core::_BindingData_default_instance_.scalar_ = const_cast< ::flyteidl::core::Scalar*>(
      ::flyteidl::core::Scalar::internal_default_instance());
  ::flyteidl::core::_BindingData_default_instance_.collection_ = const_cast< ::flyteidl::core::BindingDataCollection*>(
      ::flyteidl::core::BindingDataCollection::internal_default_instance());
  ::flyteidl::core::_BindingData_default_instance_.promise_ = const_cast< ::flyteidl::core::OutputReference*>(
      ::flyteidl::core::OutputReference::internal_default_instance());
  ::flyteidl::core::_BindingData_default_instance_.map_ = const_cast< ::flyteidl::core::BindingDataMap*>(
      ::flyteidl::core::BindingDataMap::internal_default_instance());
}
void BindingData::set_allocated_scalar(::flyteidl::core::Scalar* scalar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (scalar) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scalar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    value_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.BindingData.scalar)
}
void BindingData::set_allocated_collection(::flyteidl::core::BindingDataCollection* collection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (collection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      collection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, collection, submessage_arena);
    }
    set_has_collection();
    value_.collection_ = collection;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.BindingData.collection)
}
void BindingData::set_allocated_promise(::flyteidl::core::OutputReference* promise) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (promise) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      promise = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, promise, submessage_arena);
    }
    set_has_promise();
    value_.promise_ = promise;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.BindingData.promise)
}
void BindingData::clear_promise() {
  if (has_promise()) {
    delete value_.promise_;
    clear_has_value();
  }
}
void BindingData::set_allocated_map(::flyteidl::core::BindingDataMap* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.BindingData.map)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindingData::kScalarFieldNumber;
const int BindingData::kCollectionFieldNumber;
const int BindingData::kPromiseFieldNumber;
const int BindingData::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindingData::BindingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.BindingData)
}
BindingData::BindingData(const BindingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kScalar: {
      mutable_scalar()->::flyteidl::core::Scalar::MergeFrom(from.scalar());
      break;
    }
    case kCollection: {
      mutable_collection()->::flyteidl::core::BindingDataCollection::MergeFrom(from.collection());
      break;
    }
    case kPromise: {
      mutable_promise()->::flyteidl::core::OutputReference::MergeFrom(from.promise());
      break;
    }
    case kMap: {
      mutable_map()->::flyteidl::core::BindingDataMap::MergeFrom(from.map());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.BindingData)
}

void BindingData::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

BindingData::~BindingData() {
  // @@protoc_insertion_point(destructor:flyteidl.core.BindingData)
  SharedDtor();
}

void BindingData::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void BindingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindingData::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindingData& BindingData::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBindingData();
  return *internal_default_instance();
}

BindingData* BindingData::New(::google::protobuf::Arena* arena) const {
  BindingData* n = new BindingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindingData::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.BindingData)
  switch (value_case()) {
    case kScalar: {
      delete value_.scalar_;
      break;
    }
    case kCollection: {
      delete value_.collection_;
      break;
    }
    case kPromise: {
      delete value_.promise_;
      break;
    }
    case kMap: {
      delete value_.map_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void BindingData::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.BindingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool BindingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.BindingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flyteidl.core.Scalar scalar = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scalar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.BindingDataCollection collection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_collection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.OutputReference promise = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_promise()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.BindingDataMap map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.BindingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.BindingData)
  return false;
#undef DO_
}

void BindingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.BindingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Scalar scalar = 1;
  if (has_scalar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *value_.scalar_, output);
  }

  // .flyteidl.core.BindingDataCollection collection = 2;
  if (has_collection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *value_.collection_, output);
  }

  // .flyteidl.core.OutputReference promise = 3;
  if (has_promise()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *value_.promise_, output);
  }

  // .flyteidl.core.BindingDataMap map = 4;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *value_.map_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.BindingData)
}

::google::protobuf::uint8* BindingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.BindingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flyteidl.core.Scalar scalar = 1;
  if (has_scalar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *value_.scalar_, deterministic, target);
  }

  // .flyteidl.core.BindingDataCollection collection = 2;
  if (has_collection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *value_.collection_, deterministic, target);
  }

  // .flyteidl.core.OutputReference promise = 3;
  if (has_promise()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *value_.promise_, deterministic, target);
  }

  // .flyteidl.core.BindingDataMap map = 4;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *value_.map_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.BindingData)
  return target;
}

size_t BindingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.BindingData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // .flyteidl.core.Scalar scalar = 1;
    case kScalar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.scalar_);
      break;
    }
    // .flyteidl.core.BindingDataCollection collection = 2;
    case kCollection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.collection_);
      break;
    }
    // .flyteidl.core.OutputReference promise = 3;
    case kPromise: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.promise_);
      break;
    }
    // .flyteidl.core.BindingDataMap map = 4;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.map_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.BindingData)
  GOOGLE_DCHECK_NE(&from, this);
  const BindingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.BindingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.BindingData)
    MergeFrom(*source);
  }
}

void BindingData::MergeFrom(const BindingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.BindingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kScalar: {
      mutable_scalar()->::flyteidl::core::Scalar::MergeFrom(from.scalar());
      break;
    }
    case kCollection: {
      mutable_collection()->::flyteidl::core::BindingDataCollection::MergeFrom(from.collection());
      break;
    }
    case kPromise: {
      mutable_promise()->::flyteidl::core::OutputReference::MergeFrom(from.promise());
      break;
    }
    case kMap: {
      mutable_map()->::flyteidl::core::BindingDataMap::MergeFrom(from.map());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void BindingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.BindingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindingData::CopyFrom(const BindingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.BindingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindingData::IsInitialized() const {
  return true;
}

void BindingData::Swap(BindingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindingData::InternalSwap(BindingData* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindingData::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Binding::InitAsDefaultInstance() {
  ::flyteidl::core::_Binding_default_instance_._instance.get_mutable()->binding_ = const_cast< ::flyteidl::core::BindingData*>(
      ::flyteidl::core::BindingData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Binding::kVarFieldNumber;
const int Binding::kBindingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Binding::Binding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinding();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.Binding)
}
Binding::Binding(const Binding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.var().size() > 0) {
    var_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_);
  }
  if (from.has_binding()) {
    binding_ = new ::flyteidl::core::BindingData(*from.binding_);
  } else {
    binding_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.Binding)
}

void Binding::SharedCtor() {
  var_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binding_ = NULL;
  _cached_size_ = 0;
}

Binding::~Binding() {
  // @@protoc_insertion_point(destructor:flyteidl.core.Binding)
  SharedDtor();
}

void Binding::SharedDtor() {
  var_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete binding_;
}

void Binding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Binding::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Binding& Binding::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsBinding();
  return *internal_default_instance();
}

Binding* Binding::New(::google::protobuf::Arena* arena) const {
  Binding* n = new Binding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Binding::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && binding_ != NULL) {
    delete binding_;
  }
  binding_ = NULL;
  _internal_metadata_.Clear();
}

bool Binding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.Binding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string var = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_var()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->var().data(), static_cast<int>(this->var().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.Binding.var"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flyteidl.core.BindingData binding = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.Binding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.Binding)
  return false;
#undef DO_
}

void Binding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var = 1;
  if (this->var().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->var().data(), static_cast<int>(this->var().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Binding.var");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->var(), output);
  }

  // .flyteidl.core.BindingData binding = 2;
  if (this->has_binding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->binding_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.Binding)
}

::google::protobuf::uint8* Binding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.Binding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var = 1;
  if (this->var().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->var().data(), static_cast<int>(this->var().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.Binding.var");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->var(), target);
  }

  // .flyteidl.core.BindingData binding = 2;
  if (this->has_binding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->binding_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.Binding)
  return target;
}

size_t Binding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.Binding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string var = 1;
  if (this->var().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->var());
  }

  // .flyteidl.core.BindingData binding = 2;
  if (this->has_binding()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->binding_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Binding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  const Binding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Binding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.Binding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.Binding)
    MergeFrom(*source);
  }
}

void Binding::MergeFrom(const Binding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.Binding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var().size() > 0) {

    var_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.var_);
  }
  if (from.has_binding()) {
    mutable_binding()->::flyteidl::core::BindingData::MergeFrom(from.binding());
  }
}

void Binding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Binding::CopyFrom(const Binding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.Binding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Binding::IsInitialized() const {
  return true;
}

void Binding::Swap(Binding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Binding::InternalSwap(Binding* other) {
  using std::swap;
  var_.Swap(&other->var_);
  swap(binding_, other->binding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Binding::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValuePair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValuePair::kKeyFieldNumber;
const int KeyValuePair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValuePair::KeyValuePair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsKeyValuePair();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.KeyValuePair)
}
KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.KeyValuePair)
}

void KeyValuePair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:flyteidl.core.KeyValuePair)
  SharedDtor();
}

void KeyValuePair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValuePair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValuePair::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValuePair& KeyValuePair::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsKeyValuePair();
  return *internal_default_instance();
}

KeyValuePair* KeyValuePair::New(::google::protobuf::Arena* arena) const {
  KeyValuePair* n = new KeyValuePair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.KeyValuePair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyValuePair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.KeyValuePair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.KeyValuePair.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.KeyValuePair.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.KeyValuePair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.KeyValuePair)
  return false;
#undef DO_
}

void KeyValuePair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.KeyValuePair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.KeyValuePair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.KeyValuePair.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.KeyValuePair)
}

::google::protobuf::uint8* KeyValuePair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.KeyValuePair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.KeyValuePair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.KeyValuePair.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.KeyValuePair)
  return target;
}

size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.KeyValuePair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValuePair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValuePair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValuePair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.KeyValuePair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.KeyValuePair)
    MergeFrom(*source);
  }
}

void KeyValuePair::MergeFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValuePair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {
  return true;
}

void KeyValuePair::Swap(KeyValuePair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValuePair::InternalSwap(KeyValuePair* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValuePair::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RetryStrategy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RetryStrategy::kRetriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RetryStrategy::RetryStrategy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsRetryStrategy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.RetryStrategy)
}
RetryStrategy::RetryStrategy(const RetryStrategy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retries_ = from.retries_;
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.RetryStrategy)
}

void RetryStrategy::SharedCtor() {
  retries_ = 0u;
  _cached_size_ = 0;
}

RetryStrategy::~RetryStrategy() {
  // @@protoc_insertion_point(destructor:flyteidl.core.RetryStrategy)
  SharedDtor();
}

void RetryStrategy::SharedDtor() {
}

void RetryStrategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RetryStrategy::descriptor() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RetryStrategy& RetryStrategy::default_instance() {
  ::protobuf_flyteidl_2fcore_2fliterals_2eproto::InitDefaultsRetryStrategy();
  return *internal_default_instance();
}

RetryStrategy* RetryStrategy::New(::google::protobuf::Arena* arena) const {
  RetryStrategy* n = new RetryStrategy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RetryStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.RetryStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retries_ = 0u;
  _internal_metadata_.Clear();
}

bool RetryStrategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.RetryStrategy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 retries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.RetryStrategy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.RetryStrategy)
  return false;
#undef DO_
}

void RetryStrategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.RetryStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retries = 5;
  if (this->retries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->retries(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.RetryStrategy)
}

::google::protobuf::uint8* RetryStrategy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.RetryStrategy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 retries = 5;
  if (this->retries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->retries(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.RetryStrategy)
  return target;
}

size_t RetryStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.RetryStrategy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 retries = 5;
  if (this->retries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retries());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RetryStrategy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.RetryStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const RetryStrategy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RetryStrategy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.RetryStrategy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.RetryStrategy)
    MergeFrom(*source);
  }
}

void RetryStrategy::MergeFrom(const RetryStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.RetryStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retries() != 0) {
    set_retries(from.retries());
  }
}

void RetryStrategy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.RetryStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetryStrategy::CopyFrom(const RetryStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.RetryStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetryStrategy::IsInitialized() const {
  return true;
}

void RetryStrategy::Swap(RetryStrategy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RetryStrategy::InternalSwap(RetryStrategy* other) {
  using std::swap;
  swap(retries_, other->retries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RetryStrategy::GetMetadata() const {
  protobuf_flyteidl_2fcore_2fliterals_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_flyteidl_2fcore_2fliterals_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl

// @@protoc_insertion_point(global_scope)
